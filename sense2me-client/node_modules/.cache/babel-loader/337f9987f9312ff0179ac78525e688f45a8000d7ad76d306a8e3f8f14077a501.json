{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\Sense2MeNew\\\\sense2me-client\\\\src\\\\components\\\\admin\\\\CreateOrder.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CreateOrder() {\n  _s();\n  var _items$currentItemInd, _items$currentItemInd2, _items$currentItemInd3, _items$currentItemInd4, _items$currentItemInd5, _items$currentItemInd6;\n  const [items, setItems] = useState([]);\n  const [currentItemIndex, setCurrentItemIndex] = useState(0);\n  const [dataLoaded, setDataLoaded] = useState(false);\n  useEffect(() => {\n    fetch('https://1blnclstr9.execute-api.eu-west-1.amazonaws.com/default/getOrdersDalek', {\n      method: 'GET',\n      // or 'GET', 'PUT', 'DELETE' depending on your Lambda function configuration\n      headers: {\n        'Content-Type': 'application/json'\n        // Additional headers if required\n      }\n    }).then(response => response.json()).then(data => {\n      // Handle the response data from the Lambda function\n      console.log(JSON.parse(data.body));\n      setItems(JSON.parse(data.body));\n      setDataLoaded(true);\n    }).catch(error => {\n      // Handle any errors that occurred during the request\n      console.error(error);\n    });\n  }, []);\n  const formatItem = item => {\n    if (!item) {\n      console.log(\"hello\");\n      return \"\"; // Return an empty string if the item or its properties are undefined\n    }\n\n    const name = item.M.name.S || \"N/A\"; // Access the 'name' property inside the 'M' object, or provide a default value if it doesn't exist\n    const amount = item.M.amount.N || \"N/A\";\n    return `(${name}, ${amount})`;\n  };\n\n  // Use the 'formatItem' function to format each item and join them with a comma\n  const formattedItems = items.map(item => formatItem(item)).join(\", \");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CreateAdmin\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-main\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"create-order\",\n        children: dataLoaded && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"date\",\n            placeholder: \"Date\",\n            className: \"text-input\",\n            value: ((_items$currentItemInd = items[currentItemIndex]) === null || _items$currentItemInd === void 0 ? void 0 : (_items$currentItemInd2 = _items$currentItemInd.dateOrder) === null || _items$currentItemInd2 === void 0 ? void 0 : _items$currentItemInd2.S) || \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"price\",\n            placeholder: \"Price\",\n            className: \"text-input\",\n            value: ((_items$currentItemInd3 = items[currentItemIndex]) === null || _items$currentItemInd3 === void 0 ? void 0 : (_items$currentItemInd4 = _items$currentItemInd3.price) === null || _items$currentItemInd4 === void 0 ? void 0 : _items$currentItemInd4.N) || \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Items:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [item.M.name.S, \" - \", item.M.amount.N]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"items\",\n            placeholder: \"Items\",\n            className: \"text-input\",\n            value: ((_items$currentItemInd5 = items[currentItemIndex]) === null || _items$currentItemInd5 === void 0 ? void 0 : (_items$currentItemInd6 = _items$currentItemInd5.items) === null || _items$currentItemInd6 === void 0 ? void 0 : _items$currentItemInd6.M.amount.S) || \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"User:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"user\",\n            placeholder: \"user\",\n            className: \"text-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Order Code:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"orderCode\",\n            placeholder: \"OrderCode\",\n            className: \"text-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"address\",\n            placeholder: \"Address\",\n            className: \"text-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 11\n  }, this);\n}\n_s(CreateOrder, \"qVyVbdbrlfdYaPJuoSS3OTqU6Uo=\");\n_c = CreateOrder;\nexport default CreateOrder;\nvar _c;\n$RefreshReg$(_c, \"CreateOrder\");","map":{"version":3,"names":["React","useEffect","useState","CreateOrder","items","setItems","currentItemIndex","setCurrentItemIndex","dataLoaded","setDataLoaded","fetch","method","headers","then","response","json","data","console","log","JSON","parse","body","catch","error","formatItem","item","name","M","S","amount","N","formattedItems","map","join","dateOrder","price","index"],"sources":["D:/Github/Sense2MeNew/sense2me-client/src/components/admin/CreateOrder.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\n\r\nfunction CreateOrder(){\r\n  \r\n  const [items, setItems] = useState([]);\r\n  const [currentItemIndex, setCurrentItemIndex] = useState(0);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n      useEffect(() => {\r\n        fetch('https://1blnclstr9.execute-api.eu-west-1.amazonaws.com/default/getOrdersDalek', {\r\n            method: 'GET', // or 'GET', 'PUT', 'DELETE' depending on your Lambda function configuration\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              // Additional headers if required\r\n            },\r\n          })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n              // Handle the response data from the Lambda function\r\n              console.log(JSON.parse(data.body));\r\n              setItems(JSON.parse(data.body));\r\n              setDataLoaded(true);\r\n            })\r\n            .catch(error => {\r\n              // Handle any errors that occurred during the request\r\n              console.error(error);\r\n            });\r\n    }, [])\r\n\r\n    const formatItem = (item) => {\r\n      if (!item) {\r\n        console.log(\"hello\")\r\n        return \"\"; // Return an empty string if the item or its properties are undefined\r\n      }\r\n      \r\n      const name = item.M.name.S || \"N/A\"; // Access the 'name' property inside the 'M' object, or provide a default value if it doesn't exist\r\n      const amount = item.M.amount.N || \"N/A\";\r\n      return `(${name}, ${amount})`;\r\n    };\r\n    \r\n    // Use the 'formatItem' function to format each item and join them with a comma\r\n    const formattedItems = items.map((item) => formatItem(item)).join(\", \");\r\n    \r\n  \r\n      return(\r\n          <div className=\"CreateAdmin\">\r\n              <div className=\"content-main\">\r\n                <form id=\"create-order\">\r\n                {dataLoaded && (\r\n                  <>\r\n                    <label>Date:</label>\r\n                    <input type=\"text\" id=\"date\" placeholder=\"Date\" className=\"text-input\" value={items[currentItemIndex]?.dateOrder?.S || \"\"}/>\r\n                    <label>Price:</label>\r\n                    <input type=\"text\" id=\"price\" placeholder=\"Price\" className=\"text-input\" value={items[currentItemIndex]?.price?.N || \"\"}/>\r\n                    <label>Items:</label> \r\n                    <ul>\r\n                {items.map((item, index) => (\r\n                  <li key={index}>{item.M.name.S} - {item.M.amount.N}</li>\r\n                ))}\r\n              </ul><input type=\"text\" id=\"items\" placeholder=\"Items\" className=\"text-input\" value={items[currentItemIndex]?.items?.M.amount.S || \"\"}/>\r\n                    <label>User:</label>\r\n                    <input type=\"text\" id=\"user\" placeholder=\"user\" className=\"text-input\"/>\r\n                    <label>Order Code:</label>\r\n                    <input type=\"text\" id=\"orderCode\" placeholder=\"OrderCode\" className=\"text-input\"/>\r\n                    <label>Address:</label>\r\n                    <input type=\"text\" id=\"address\" placeholder=\"Address\" className=\"text-input\"/>\r\n                  </>\r\n)}\r\n              </form>\r\n            </div>\r\n          </div>\r\n      );\r\n  \r\n  }\r\n  \r\n  export default CreateOrder;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}