{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\Sense2MeNew\\\\sense2me-client\\\\src\\\\pages\\\\shop.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ProductShopPage from '../components/Users/ProductShopPage';\nimport NavBar from '../components/NavBar';\nimport './shop.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst basket = JSON.parse(sessionStorage.getItem('basket')) || [];\nfunction Shop() {\n  _s();\n  const [items, setItems] = useState([]);\n  const filteredItems = items.filter(item => item.inventory_count.N !== '0');\n  function CheckStockLevels() {\n    for (let i = 0; i < items.length; i++) {\n      for (let j = 0; j < basket.length; j++) {\n        if (basket[j].sku === items[i].sku.S) {\n          if (basket[j].amount > items[i].inventory_count.N) {\n            console.log('Hello');\n            const proceedWithReducedStock = window.confirm('Not Enough Stock for: ' + basket[j].name + '. Being changed to: ' + items[i].inventory_count.N + '. Do you wish to proceed?');\n            if (proceedWithReducedStock) {\n              basket[j].amount = items[i].inventory_count.N;\n            } else {\n              basket.splice(j, 1);\n              console.log(basket);\n            }\n            sessionStorage.setItem('basket', JSON.stringify(basket));\n          }\n        }\n      }\n    }\n  }\n  useEffect(() => {\n    fetch('https://y6wf50h2e4.execute-api.eu-west-1.amazonaws.com/dev/getProductDalek', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      setItems(JSON.parse(data.body));\n      console.log(JSON.parse(data.body));\n    }).catch(error => {\n      console.error(error);\n    });\n\n    // Call CheckStockLevels here as well, to check stock levels after fetching data\n    if (basket.length !== 0) {\n      console.log('Checking Stock');\n      CheckStockLevels();\n    }\n  }, []);\n  useEffect(() => {\n    // Use useEffect to call CheckStockLevels whenever the items state changes\n    if (basket.length !== 0) {\n      console.log('Checking Stock');\n      CheckStockLevels();\n    }\n  }, [items]); // Add 'items' as a dependency, so this effect runs when 'items' changes\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Shop\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper-shop\",\n        children: filteredItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No Stock Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this) : filteredItems.map(item => /*#__PURE__*/_jsxDEV(ProductShopPage, {\n          items: item\n        }, item.sku.S, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 41\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Shop, \"OFpe5t0oz9MFBJItuO7ZFbxuhyA=\");\n_c = Shop;\nexport default Shop;\nvar _c;\n$RefreshReg$(_c, \"Shop\");","map":{"version":3,"names":["React","useEffect","useState","ProductShopPage","NavBar","basket","JSON","parse","sessionStorage","getItem","Shop","items","setItems","filteredItems","filter","item","inventory_count","N","CheckStockLevels","i","length","j","sku","S","amount","console","log","proceedWithReducedStock","window","confirm","name","splice","setItem","stringify","fetch","method","headers","then","response","json","data","body","catch","error","map"],"sources":["D:/Github/Sense2MeNew/sense2me-client/src/pages/shop.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ProductShopPage from '../components/Users/ProductShopPage';\r\nimport NavBar from '../components/NavBar';\r\nimport './shop.css';\r\n\r\nconst basket = JSON.parse(sessionStorage.getItem('basket')) || [];\r\n\r\nfunction Shop() {\r\n  const [items, setItems] = useState([]);\r\n  const filteredItems = items.filter((item) => item.inventory_count.N !== '0');\r\n\r\n  function CheckStockLevels() {\r\n    for (let i = 0; i < items.length; i++) {\r\n      for (let j = 0; j < basket.length; j++) {\r\n        if (basket[j].sku === items[i].sku.S) {\r\n          if (basket[j].amount > items[i].inventory_count.N) {\r\n            console.log('Hello');\r\n            const proceedWithReducedStock = window.confirm(\r\n              'Not Enough Stock for: ' + basket[j].name + '. Being changed to: ' + items[i].inventory_count.N + '. Do you wish to proceed?'\r\n            );\r\n\r\n            if (proceedWithReducedStock) {\r\n              basket[j].amount = items[i].inventory_count.N;\r\n            } else {\r\n              basket.splice(j, 1);\r\n              console.log(basket);\r\n            }\r\n\r\n            sessionStorage.setItem('basket', JSON.stringify(basket));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch('https://y6wf50h2e4.execute-api.eu-west-1.amazonaws.com/dev/getProductDalek', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setItems(JSON.parse(data.body));\r\n        console.log(JSON.parse(data.body));\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n\r\n    // Call CheckStockLevels here as well, to check stock levels after fetching data\r\n    if (basket.length !== 0) {\r\n      console.log('Checking Stock');\r\n      CheckStockLevels();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Use useEffect to call CheckStockLevels whenever the items state changes\r\n    if (basket.length !== 0) {\r\n      console.log('Checking Stock');\r\n      CheckStockLevels();\r\n    }\r\n  }, [items]); // Add 'items' as a dependency, so this effect runs when 'items' changes\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Shop\">\r\n        <NavBar />\r\n        <div className=\"wrapper-shop\">\r\n          {filteredItems.length === 0 ? (\r\n            <h2>No Stock Available</h2>\r\n          ) : (\r\n            filteredItems.map((item) => <ProductShopPage key={item.sku.S} items={item} />)\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Shop;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}