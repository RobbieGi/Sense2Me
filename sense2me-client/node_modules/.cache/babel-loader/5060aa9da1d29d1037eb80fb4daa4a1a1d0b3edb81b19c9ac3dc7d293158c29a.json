{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\Sense2MeNew\\\\sense2me-client\\\\src\\\\pages\\\\Users\\\\Basket.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport NavBar from \"../../components/NavBar\";\nimport \"./Basket.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst basket = JSON.parse(sessionStorage.getItem(\"basket\")) || [];\nfunction formatDate() {\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  const day = String(date.getDate()).padStart(2, \"0\");\n  return `${year}-${month}-${day}`;\n}\nfunction updateStockOnServer(sku, amount) {\n  // Make the API call to update the stock on the server\n  // Replace \"YOUR_API_ENDPOINT\" with the actual API endpoint\n  fetch(\"https://jbcwifish5.execute-api.eu-west-1.amazonaws.com/default/updateInventoryCount\", {\n    method: \"PUT\",\n    body: JSON.stringify({\n      sku,\n      amount\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error(\"Failed to update stock on the server\");\n    }\n  }).catch(error => {\n    console.error(error);\n  });\n}\nfunction Basket() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [basket, setBasket] = useState(JSON.parse(sessionStorage.getItem(\"basket\")) || []);\n  const [lowStock, setLowStock] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch('https://y6wf50h2e4.execute-api.eu-west-1.amazonaws.com/dev/getProductDalek').then(response => response.json()).then(data => {\n      setProducts(JSON.parse(data.body));\n      setLoading(false); // Set loading to false after data is fetched and set\n    }).catch(error => {\n      console.error(error);\n      setLoading(false); // Set loading to false if an error occurs\n    });\n  }, []);\n  useEffect(() => {\n    // Call CheckStockLevels when the component mounts to update lowStock\n    //CheckStockLevels();\n  }, []);\n\n  // function CheckStockLevels(){\n  //   console.log(\"Inside Check Stock\")\n  //   console.log(products)\n  //   console.log(\"Products Length: \", products.length)\n  //   for (let i = 0; i < products.length; i++) {\n  //     console.log(\"First For Loop\")\n  //     for (let j = 0; j < basket.length; j++) {\n  //       console.log(\"Second For Loop\")\n  //       if(basket[j].sku === products[i].sku.S){\n  //         console.log(\"Same SKU\")\n  //         if(basket[j].amount > products[i].inventory_count.N){\n  //           const proceedWithReducedStock = window.confirm(\"Not Enough Stock for: \" + basket[j].name + \". Being changed to: \" + products[i].inventory_count.N + \". Do you wish to proceed?\")\n  //           if(proceedWithReducedStock){\n  //             basket[j].amount = products[i].inventory_count.N;\n  //           }else{\n  //             basket.splice(j, 1);\n  //             console.log(basket)\n  //           }\n  //           sessionStorage.setItem(\"basket\", JSON.stringify(basket));\n  //         }\n  //       }\n  //       var remainingProduct = products[i].inventory_count.N - basket[j].amount;\n  //         console.log(remainingProduct);\n  //         if (remainingProduct <= 3) {\n  //           console.log(\n  //             \"Low Stock for: \",\n  //             products[i].name.S,\n  //             \" Amount Left: \",\n  //             products[i].inventory_count.N\n  //           );\n\n  //           // Check if an item with the same name already exists in the lowStock array\n  //           const existingItem = lowStock.find(\n  //             (item) => item.name.S === products[i].name.S\n  //           );\n  //           console.log(existingItem)\n\n  //           // If the item doesn't exist in the lowStock array, add it\n  //           if (!existingItem) {\n  //             setLowStock((prevLowStock) => [...prevLowStock, products[i]]);\n  //           }\n  //         }\n  //     }\n  //   }\n  // }\n\n  function CheckOut() {\n    if (basket.length !== 0) {\n      const order_ID = \"S2M_\" + uuidv4();\n      let items = [];\n      let price = 0;\n      for (let i = 0; i < basket.length; i++) {\n        items.push({\n          sku: basket[i].sku,\n          name: basket[i].name,\n          amount: basket[i].amount,\n          price: basket[i].price\n        });\n        price += basket[i].amount * basket[i].price;\n      }\n      const userID = sessionStorage.getItem(\"name\");\n\n      // Make the API call to post the order to the server\n      fetch(\"https://3nh8ubnqrh.execute-api.eu-west-1.amazonaws.com/default/postOrderDalek\", {\n        mode: \"cors\",\n        method: \"POST\",\n        body: JSON.stringify({\n          order_ID,\n          userID,\n          price,\n          items,\n          dateOrder: formatDate(),\n          completed: false,\n          email: sessionStorage.getItem(\"email\"),\n          lowStock: lowStock\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        if (res.ok) {\n          console.log(res);\n          return res.json();\n        }\n        throw new Error(\"Request failed!\");\n      }).then(data => {\n        window.alert(\"Posted Correctly\");\n        console.log(data);\n        sessionStorage.removeItem(\"basket\");\n        window.location.reload();\n      }).catch(error => {\n        console.error(\"There was a problem with the fetch operation:\", error);\n      });\n\n      // Update the stock on the server for each item in the basket\n      for (let i = 0; i < basket.length; i++) {\n        const {\n          sku,\n          amount\n        } = basket[i];\n        console.log(sku, amount);\n        updateStockOnServer(sku, amount);\n      }\n    }\n  }\n  function checkMaxStock(index) {\n    for (let i = 0; i < products.length; i++) {\n      if (products[i].sku.S === basket[index].sku) {\n        if (products[i].inventory_count.N > basket[index].amount) {\n          console.log(\"Inside Loop\");\n          return true;\n        } else {\n          return false;\n        }\n      }\n    }\n  }\n  function add(i) {\n    if (checkMaxStock(i)) {\n      console.log(\"Less Than\");\n      const updatedBasket = [...basket];\n      updatedBasket[i].amount += 1;\n      setBasket(updatedBasket);\n      sessionStorage.setItem(\"basket\", JSON.stringify(updatedBasket));\n    } else {\n      alert(\"Max Amount Reached\");\n    }\n  }\n  function subtract(i) {\n    const updatedBasket = [...basket];\n    updatedBasket[i].amount -= 1;\n    if (updatedBasket[i].amount === 0) {\n      updatedBasket.splice(i, 1);\n    }\n    setBasket(updatedBasket);\n    sessionStorage.setItem(\"basket\", JSON.stringify(updatedBasket));\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-main-basket\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Buttons\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: basket.map((product, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: product.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: product.amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: product.image_url,\n                  id: \"basket-img\",\n                  alt: \"Product 1\",\n                  width: \"50\",\n                  height: \"50\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: product.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => add(index),\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => subtract(index),\n                  children: \"Subtract\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"basket-CheckOut\",\n            onClick: CheckOut,\n            children: \"Check Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Basket, \"Wrqi1Dk7VqKbWrx42E4wzeCC8TY=\");\n_c = Basket;\nexport default Basket;\nvar _c;\n$RefreshReg$(_c, \"Basket\");","map":{"version":3,"names":["React","useState","useEffect","v4","uuidv4","NavBar","basket","JSON","parse","sessionStorage","getItem","formatDate","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","updateStockOnServer","sku","amount","fetch","method","body","stringify","headers","then","response","ok","Error","catch","error","console","Basket","products","setProducts","setBasket","lowStock","setLowStock","loading","setLoading","json","data","CheckOut","length","order_ID","items","price","i","push","name","userID","mode","dateOrder","completed","email","res","log","window","alert","removeItem","location","reload","checkMaxStock","index","S","inventory_count","N","add","updatedBasket","setItem","subtract","splice","map","product","image_url","description"],"sources":["D:/Github/Sense2MeNew/sense2me-client/src/pages/Users/Basket.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport NavBar from \"../../components/NavBar\";\r\nimport \"./Basket.css\";\r\n\r\nconst basket = JSON.parse(sessionStorage.getItem(\"basket\")) || [];\r\n\r\nfunction formatDate() {\r\n  const date = new Date();\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n  const day = String(date.getDate()).padStart(2, \"0\");\r\n  return `${year}-${month}-${day}`;\r\n}\r\n\r\nfunction updateStockOnServer(sku, amount) {\r\n  // Make the API call to update the stock on the server\r\n  // Replace \"YOUR_API_ENDPOINT\" with the actual API endpoint\r\n  fetch(\"https://jbcwifish5.execute-api.eu-west-1.amazonaws.com/default/updateInventoryCount\", {\r\n    method: \"PUT\",\r\n    body: JSON.stringify({ sku, amount }),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to update stock on the server\");\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    });\r\n}\r\n\r\nfunction Basket() {\r\n\r\n  const [products, setProducts] = useState([])\r\n  const [basket, setBasket] = useState(JSON.parse(sessionStorage.getItem(\"basket\")) || []);\r\n  const [lowStock, setLowStock] = useState([])\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch('https://y6wf50h2e4.execute-api.eu-west-1.amazonaws.com/dev/getProductDalek')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setProducts(JSON.parse(data.body));\r\n        setLoading(false); // Set loading to false after data is fetched and set\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n        setLoading(false); // Set loading to false if an error occurs\r\n      });\r\n  }, []);\r\n\r\n    useEffect(() => {\r\n      // Call CheckStockLevels when the component mounts to update lowStock\r\n      //CheckStockLevels();\r\n    }, []);\r\n\r\n  // function CheckStockLevels(){\r\n  //   console.log(\"Inside Check Stock\")\r\n  //   console.log(products)\r\n  //   console.log(\"Products Length: \", products.length)\r\n  //   for (let i = 0; i < products.length; i++) {\r\n  //     console.log(\"First For Loop\")\r\n  //     for (let j = 0; j < basket.length; j++) {\r\n  //       console.log(\"Second For Loop\")\r\n  //       if(basket[j].sku === products[i].sku.S){\r\n  //         console.log(\"Same SKU\")\r\n  //         if(basket[j].amount > products[i].inventory_count.N){\r\n  //           const proceedWithReducedStock = window.confirm(\"Not Enough Stock for: \" + basket[j].name + \". Being changed to: \" + products[i].inventory_count.N + \". Do you wish to proceed?\")\r\n  //           if(proceedWithReducedStock){\r\n  //             basket[j].amount = products[i].inventory_count.N;\r\n  //           }else{\r\n  //             basket.splice(j, 1);\r\n  //             console.log(basket)\r\n  //           }\r\n  //           sessionStorage.setItem(\"basket\", JSON.stringify(basket));\r\n  //         }\r\n  //       }\r\n  //       var remainingProduct = products[i].inventory_count.N - basket[j].amount;\r\n  //         console.log(remainingProduct);\r\n  //         if (remainingProduct <= 3) {\r\n  //           console.log(\r\n  //             \"Low Stock for: \",\r\n  //             products[i].name.S,\r\n  //             \" Amount Left: \",\r\n  //             products[i].inventory_count.N\r\n  //           );\r\n\r\n  //           // Check if an item with the same name already exists in the lowStock array\r\n  //           const existingItem = lowStock.find(\r\n  //             (item) => item.name.S === products[i].name.S\r\n  //           );\r\n  //           console.log(existingItem)\r\n\r\n  //           // If the item doesn't exist in the lowStock array, add it\r\n  //           if (!existingItem) {\r\n  //             setLowStock((prevLowStock) => [...prevLowStock, products[i]]);\r\n  //           }\r\n  //         }\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  function CheckOut() {\r\n    if (basket.length !== 0) {\r\n      const order_ID = \"S2M_\" + uuidv4();\r\n      let items = [];\r\n      let price = 0;\r\n\r\n      for (let i = 0; i < basket.length; i++) {\r\n        items.push({ sku: basket[i].sku, name: basket[i].name, amount: basket[i].amount, price: basket[i].price});\r\n        price += basket[i].amount * basket[i].price;\r\n      }\r\n\r\n      const userID = sessionStorage.getItem(\"name\");\r\n\r\n      // Make the API call to post the order to the server\r\n      fetch(\"https://3nh8ubnqrh.execute-api.eu-west-1.amazonaws.com/default/postOrderDalek\", {\r\n        mode: \"cors\",\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          order_ID,\r\n          userID,\r\n          price,\r\n          items,\r\n          dateOrder: formatDate(),\r\n          completed: false,\r\n          email: sessionStorage.getItem(\"email\"),\r\n          lowStock: lowStock\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          if (res.ok) {\r\n            console.log(res);\r\n            return res.json();\r\n          }\r\n          throw new Error(\"Request failed!\");\r\n        })\r\n        .then((data) => {\r\n          window.alert(\"Posted Correctly\");\r\n          console.log(data);\r\n          sessionStorage.removeItem(\"basket\");\r\n          window.location.reload();\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"There was a problem with the fetch operation:\", error);\r\n        });\r\n\r\n      // Update the stock on the server for each item in the basket\r\n      for (let i = 0; i < basket.length; i++) {\r\n        const { sku, amount } = basket[i];\r\n        console.log(sku, amount)\r\n        updateStockOnServer(sku, amount);\r\n      }\r\n    }\r\n  }\r\n\r\n  function checkMaxStock(index){\r\n    for (let i = 0; i < products.length; i++) {\r\n      if(products[i].sku.S === basket[index].sku){\r\n        if(products[i].inventory_count.N > basket[index].amount){\r\n          console.log(\"Inside Loop\")\r\n          return true;\r\n        }else{\r\n          return false\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function add(i) {\r\n    if(checkMaxStock(i)){\r\n      console.log(\"Less Than\")\r\n      const updatedBasket = [...basket];\r\n      updatedBasket[i].amount += 1;\r\n      setBasket(updatedBasket);\r\n      sessionStorage.setItem(\"basket\", JSON.stringify(updatedBasket));\r\n    }else{\r\n      alert(\"Max Amount Reached\")\r\n    }\r\n  }\r\n\r\n  function subtract(i) {\r\n\r\n    const updatedBasket = [...basket];\r\n    updatedBasket[i].amount -= 1;\r\n    if (updatedBasket[i].amount === 0) {\r\n      updatedBasket.splice(i, 1);\r\n    }\r\n    setBasket(updatedBasket);\r\n    sessionStorage.setItem(\"basket\", JSON.stringify(updatedBasket));\r\n  }\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <div className=\"wrapper\">\r\n        <div className=\"content-main-basket\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Price</th>\r\n                <th>Amount</th>\r\n                <th>Image</th>\r\n                <th>Description</th>\r\n                <th>Buttons</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {basket.map((product, index) => (\r\n                <tr key={index}>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.price}</td>\r\n                  <td>{product.amount}</td>\r\n                  <td>\r\n                    <img src={product.image_url} id=\"basket-img\" alt=\"Product 1\" width=\"50\" height=\"50\" />\r\n                  </td>\r\n                  <td>{product.description}</td>\r\n                  <td>\r\n                    <button onClick={() => add(index)}>Add</button>\r\n                    <button onClick={() => subtract(index)}>Subtract</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          <div className=\"button\">\r\n            <button id=\"basket-CheckOut\" onClick={CheckOut}>\r\n              Check Out\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Basket;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}