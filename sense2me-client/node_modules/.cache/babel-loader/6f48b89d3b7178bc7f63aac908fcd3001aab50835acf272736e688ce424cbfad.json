{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\Sense2MeNew\\\\sense2me-client\\\\src\\\\components\\\\admin\\\\CreateOrder.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateOrder() {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [sortKey, setSortKey] = useState(\"date\");\n  const [sortOrder, setSortOrder] = useState(\"asc\");\n  useEffect(() => {\n    fetch(\"https://1blnclstr9.execute-api.eu-west-1.amazonaws.com/default/getOrdersDalek\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(\"API Response Data:\", data);\n      setOrders(data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  const handleSort = key => {\n    if (key === sortKey) {\n      setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\");\n    } else {\n      setSortKey(key);\n      setSortOrder(\"asc\");\n    }\n  };\n  const sortedOrders = orders.slice().sort((a, b) => {\n    const valueA = a[sortKey];\n    const valueB = b[sortKey];\n    if (valueA === undefined || valueA === null) {\n      return sortOrder === \"asc\" ? -1 : 1;\n    }\n    if (valueB === undefined || valueB === null) {\n      return sortOrder === \"asc\" ? 1 : -1;\n    }\n\n    // Check if the values are numbers\n    const isNumericA = !isNaN(parseFloat(a.price.N)) && isFinite(a.price.N);\n    const isNumericB = !isNaN(parseFloat(b.price.N)) && isFinite(b.price.N);\n    if (isNumericA && isNumericB) {\n      const numericA = parseFloat(a.price.N);\n      const numericB = parseFloat(b.price.N);\n      return sortOrder === \"asc\" ? numericA - numericB : numericB - numericA;\n    } else {\n      const stringValueA = String(valueA).toLowerCase();\n      const stringValueB = String(valueB).toLowerCase();\n      return sortOrder === \"asc\" ? stringValueA.localeCompare(stringValueB) : stringValueB.localeCompare(stringValueA);\n    }\n  });\n  const handleCheckboxChange = orderID => {\n    const newOrders = orders.map(order => order.order_ID.S === orderID ? {\n      ...order,\n      completed: !order.completed\n    } : order);\n    setOrders(newOrders);\n    // Make the API call to update the completed status on the server\n    fetch(\"https://v57gq0zo66.execute-api.eu-west-1.amazonaws.com/default/updateOrderCompletedDalek\", {\n      method: \"PUT\",\n      body: JSON.stringify({\n        order_ID: orderID,\n        completed: !orders.find(order => order.order_ID.S === orderID).completed\n      })\n    }).then(response => response.json()).then(data => {\n      // Handle response data if needed\n    }).catch(error => {\n      console.error(\"Fetch error:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CreateAdmin\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-main\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => handleSort(\"date\"),\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"OrderID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => handleSort(\"price\"),\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Items (Name, Amount)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: sortedOrders.map((order, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.dateOrder.S\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.order_ID.S\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.price.N\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.items.L.map((item, itemIndex) => {\n                var _item$M$name, _item$M$amount;\n                const name = ((_item$M$name = item.M.name) === null || _item$M$name === void 0 ? void 0 : _item$M$name.S) || \"N/A\";\n                const amount = ((_item$M$amount = item.M.amount) === null || _item$M$amount === void 0 ? void 0 : _item$M$amount.N) || \"N/A\";\n                return `(${name}, ${amount})`;\n              }).join(\", \") || \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.userID.S\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: order.completed,\n                onChange: () => handleCheckboxChange(order.order_ID.S)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateOrder, \"6qA18wB45OKFc/tzAAO0chuO1ng=\");\n_c = CreateOrder;\nexport default CreateOrder;\nvar _c;\n$RefreshReg$(_c, \"CreateOrder\");","map":{"version":3,"names":["React","useEffect","useState","CreateOrder","orders","setOrders","sortKey","setSortKey","sortOrder","setSortOrder","fetch","method","headers","then","response","json","data","console","log","catch","error","handleSort","key","sortedOrders","slice","sort","a","b","valueA","valueB","undefined","isNumericA","isNaN","parseFloat","price","N","isFinite","isNumericB","numericA","numericB","stringValueA","String","toLowerCase","stringValueB","localeCompare","handleCheckboxChange","orderID","newOrders","map","order","order_ID","S","completed","body","JSON","stringify","find","index","dateOrder","items","L","item","itemIndex","name","M","amount","join","userID"],"sources":["D:/Github/Sense2MeNew/sense2me-client/src/components/admin/CreateOrder.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction CreateOrder() {\r\n  const [orders, setOrders] = useState([]);\r\n  const [sortKey, setSortKey] = useState(\"date\");\r\n  const [sortOrder, setSortOrder] = useState(\"asc\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://1blnclstr9.execute-api.eu-west-1.amazonaws.com/default/getOrdersDalek\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"API Response Data:\", data);\r\n        setOrders(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleSort = (key) => {\r\n    if (key === sortKey) {\r\n      setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\");\r\n    } else {\r\n      setSortKey(key);\r\n      setSortOrder(\"asc\");\r\n    }\r\n  };\r\n\r\n  const sortedOrders = orders.slice().sort((a, b) => {\r\n    const valueA = a[sortKey];\r\n    const valueB = b[sortKey];\r\n\r\n    if (valueA === undefined || valueA === null) {\r\n      return sortOrder === \"asc\" ? -1 : 1;\r\n    }\r\n    if (valueB === undefined || valueB === null) {\r\n      return sortOrder === \"asc\" ? 1 : -1;\r\n    }\r\n\r\n    // Check if the values are numbers\r\n    const isNumericA = !isNaN(parseFloat(a.price.N)) && isFinite(a.price.N);\r\n    const isNumericB = !isNaN(parseFloat(b.price.N)) && isFinite(b.price.N);\r\n\r\n    if (isNumericA && isNumericB) {\r\n      const numericA = parseFloat(a.price.N);\r\n      const numericB = parseFloat(b.price.N);\r\n      return sortOrder === \"asc\" ? numericA - numericB : numericB - numericA;\r\n    } else {\r\n      const stringValueA = String(valueA).toLowerCase();\r\n      const stringValueB = String(valueB).toLowerCase();\r\n      return sortOrder === \"asc\" ? stringValueA.localeCompare(stringValueB) : stringValueB.localeCompare(stringValueA);\r\n    }\r\n  });\r\n\r\n  const handleCheckboxChange = (orderID) => {\r\n    const newOrders = orders.map((order) =>\r\n      order.order_ID.S === orderID ? { ...order, completed: !order.completed } : order\r\n    );\r\n    setOrders(newOrders);\r\n    // Make the API call to update the completed status on the server\r\n    fetch(\"https://v57gq0zo66.execute-api.eu-west-1.amazonaws.com/default/updateOrderCompletedDalek\", {\r\n      method: \"PUT\",\r\n      body: JSON.stringify({\r\n        order_ID: orderID,\r\n        completed: !orders.find((order) => order.order_ID.S === orderID).completed,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Handle response data if needed\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Fetch error:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"CreateAdmin\">\r\n      <div className=\"content-main\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th onClick={() => handleSort(\"date\")}>Date</th>\r\n              <th>OrderID</th>\r\n              <th onClick={() => handleSort(\"price\")}>Price</th>\r\n              <th>Items (Name, Amount)</th>\r\n              <th>User</th>\r\n              <th>Completed</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {sortedOrders.map((order, index) => (\r\n              <tr key={index}>\r\n                <td>{order.dateOrder.S}</td>\r\n                <td>{order.order_ID.S}</td>\r\n                <td>{order.price.N}</td>\r\n                <td>\r\n                  {order.items.L.map((item, itemIndex) => {\r\n                    const name = item.M.name?.S || \"N/A\";\r\n                    const amount = item.M.amount?.N || \"N/A\";\r\n                    return `(${name}, ${amount})`;\r\n                  }).join(\", \") || \"\"}\r\n                </td>\r\n                <td>{order.userID.S}</td>\r\n                <td>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={order.completed}\r\n                    onChange={() => handleCheckboxChange(order.order_ID.S)}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateOrder;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}