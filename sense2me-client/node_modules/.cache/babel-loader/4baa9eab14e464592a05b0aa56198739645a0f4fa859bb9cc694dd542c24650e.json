{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\Sense2MeNew\\\\sense2me-client\\\\src\\\\components\\\\admin\\\\CreateOrder.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateOrder() {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [sortKey, setSortKey] = useState(\"date\");\n  const [sortOrder, setSortOrder] = useState(\"asc\");\n  useEffect(() => {\n    fetch(\"https://1blnclstr9.execute-api.eu-west-1.amazonaws.com/default/getOrdersDalek\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(\"API Response Data:\", data);\n      setOrders(data || []); // Ensure that orders is initialized as an array\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  const handleSort = key => {\n    if (key === sortKey) {\n      setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\");\n    } else {\n      setSortKey(key);\n      setSortOrder(\"asc\");\n    }\n  };\n  const sortedOrders = Array.isArray(orders) ? orders.slice().sort((a, b) => {\n    // Sorting logic remains the same\n    // ...\n  }) : [];\n\n  // Rest of the code remains the same\n  // ...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CreateAdmin\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-main\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => handleSort(\"date\"),\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"OrderID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => handleSort(\"price\"),\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Items (Name, Amount)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: sortedOrders.map((order, index) => {\n            var _order$dateOrder, _order$order_ID, _order$price, _order$items, _order$userID;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: (_order$dateOrder = order.dateOrder) === null || _order$dateOrder === void 0 ? void 0 : _order$dateOrder.S\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: (_order$order_ID = order.order_ID) === null || _order$order_ID === void 0 ? void 0 : _order$order_ID.S\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: (_order$price = order.price) === null || _order$price === void 0 ? void 0 : _order$price.N\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ((_order$items = order.items) === null || _order$items === void 0 ? void 0 : _order$items.L.map((item, itemIndex) => {\n                  var _item$M$name, _item$M$amount;\n                  const name = (item === null || item === void 0 ? void 0 : (_item$M$name = item.M.name) === null || _item$M$name === void 0 ? void 0 : _item$M$name.S) || \"N/A\";\n                  const amount = (item === null || item === void 0 ? void 0 : (_item$M$amount = item.M.amount) === null || _item$M$amount === void 0 ? void 0 : _item$M$amount.N) || \"N/A\";\n                  return `(${name}, ${amount})`;\n                }).join(\", \")) || \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: (_order$userID = order.userID) === null || _order$userID === void 0 ? void 0 : _order$userID.S\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: order.completed,\n                  onChange: () => {\n                    var _order$order_ID2;\n                    return handleCheckboxChange((_order$order_ID2 = order.order_ID) === null || _order$order_ID2 === void 0 ? void 0 : _order$order_ID2.S);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateOrder, \"6qA18wB45OKFc/tzAAO0chuO1ng=\");\n_c = CreateOrder;\nexport default CreateOrder;\nvar _c;\n$RefreshReg$(_c, \"CreateOrder\");","map":{"version":3,"names":["React","useEffect","useState","CreateOrder","orders","setOrders","sortKey","setSortKey","sortOrder","setSortOrder","fetch","method","headers","then","response","json","data","console","log","catch","error","handleSort","key","sortedOrders","Array","isArray","slice","sort","a","b","map","order","index","dateOrder","S","order_ID","price","N","items","L","item","itemIndex","name","M","amount","join","userID","completed","handleCheckboxChange"],"sources":["D:/Github/Sense2MeNew/sense2me-client/src/components/admin/CreateOrder.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction CreateOrder() {\r\n  const [orders, setOrders] = useState([]);\r\n  const [sortKey, setSortKey] = useState(\"date\");\r\n  const [sortOrder, setSortOrder] = useState(\"asc\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://1blnclstr9.execute-api.eu-west-1.amazonaws.com/default/getOrdersDalek\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"API Response Data:\", data);\r\n        setOrders(data || []); // Ensure that orders is initialized as an array\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleSort = (key) => {\r\n    if (key === sortKey) {\r\n      setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\");\r\n    } else {\r\n      setSortKey(key);\r\n      setSortOrder(\"asc\");\r\n    }\r\n  };\r\n\r\n  const sortedOrders = Array.isArray(orders)\r\n    ? orders.slice().sort((a, b) => {\r\n        // Sorting logic remains the same\r\n        // ...\r\n      })\r\n    : [];\r\n\r\n  // Rest of the code remains the same\r\n  // ...\r\n\r\n  return (\r\n    <div className=\"CreateAdmin\">\r\n      <div className=\"content-main\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th onClick={() => handleSort(\"date\")}>Date</th>\r\n              <th>OrderID</th>\r\n              <th onClick={() => handleSort(\"price\")}>Price</th>\r\n              <th>Items (Name, Amount)</th>\r\n              <th>User</th>\r\n              <th>Completed</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {sortedOrders.map((order, index) => (\r\n              <tr key={index}>\r\n                <td>{order.dateOrder?.S}</td>\r\n                <td>{order.order_ID?.S}</td>\r\n                <td>{order.price?.N}</td>\r\n                <td>\r\n                  {order.items?.L.map((item, itemIndex) => {\r\n                    const name = item?.M.name?.S || \"N/A\";\r\n                    const amount = item?.M.amount?.N || \"N/A\";\r\n                    return `(${name}, ${amount})`;\r\n                  }).join(\", \") || \"\"}\r\n                </td>\r\n                <td>{order.userID?.S}</td>\r\n                <td>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={order.completed}\r\n                    onChange={() => handleCheckboxChange(order.order_ID?.S)}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateOrder;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}