{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\Sense2MeNew\\\\sense2me-client\\\\src\\\\pages\\\\Users\\\\Basket.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport NavBar from \"../../components/NavBar\";\nimport Modal from \"../../components/Modal\"; // Import your Modal component\nimport \"./Basket.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Basket() {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [modalMessage, setModalMessage] = useState('');\n  const [products, setProducts] = useState([]);\n  const [basket, setBasket] = useState(JSON.parse(sessionStorage.getItem(\"basket\")) || []);\n  const [loading, setLoading] = useState(true);\n  const [lowStock, setLowStock] = useState([]);\n  const newLowStock = [];\n  const handleConfirm = () => {\n    // Perform actions when user confirms\n    setShowModal(false);\n  };\n  const handleCancel = () => {\n    setShowModal(false);\n  };\n  const openModalWithMessage = message => {\n    setModalMessage(message);\n    setShowModal(true);\n  };\n  useEffect(() => {\n    fetch('https://y6wf50h2e4.execute-api.eu-west-1.amazonaws.com/dev/getProductDalek').then(response => response.json()).then(data => {\n      setProducts(JSON.parse(data.body));\n      console.log(products);\n      setLoading(false);\n    }).catch(error => {\n      console.error(error);\n      setLoading(false);\n    });\n  }, []);\n  function CheckStockLevels() {\n    for (let j = 0; j < basket.length; j++) {\n      const basketProduct = basket[j];\n      const productInBasket = products.find(product => product.sku.S === basketProduct.sku);\n      if (productInBasket) {\n        handleStockCheck(basketProduct, productInBasket);\n        const remainingProduct = productInBasket.inventory_count.N - basketProduct.amount;\n        console.log(remainingProduct);\n        if (remainingProduct <= 3) {\n          console.log(\"Low Stock for: \", productInBasket.name.S, \" Amount Left: \", remainingProduct);\n          const itemAlreadyInLowStock = newLowStock.some(item => item.name.S === productInBasket.name.S);\n          productInBasket.lowEmailSent.BOOL = true;\n          productInBasket.inventory_count.N = remainingProduct;\n          console.log(\"product\", productInBasket);\n          if (!itemAlreadyInLowStock && productInBasket.lowEmailSent === true) {\n            newLowStock.push(productInBasket);\n          }\n        }\n      }\n    }\n  }\n  function handleStockCheck(basketProduct, productInBasket) {\n    if (basketProduct.amount > productInBasket.inventory_count.N) {\n      openModalWithMessage(\"Not Enough Stock for: \" + basketProduct.name + \". Being changed to: \" + productInBasket.inventory_count.N + \". Do you wish to proceed?\");\n    }\n  }\n\n  // Other functions (add, subtract, CheckOut, etc.) ...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-main-basket\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => openModalWithMessage('Not Enough Stock. Do you wish to proceed?'),\n        children: \"Show Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n        message: modalMessage,\n        onConfirm: handleConfirm,\n        onCancel: handleCancel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(Basket, \"7jTyM1AykXeKqDo0m+oaBs0ajf0=\");\n_c = Basket;\nexport default Basket;\nvar _c;\n$RefreshReg$(_c, \"Basket\");","map":{"version":3,"names":["React","useState","useEffect","v4","uuidv4","NavBar","Modal","Basket","showModal","setShowModal","modalMessage","setModalMessage","products","setProducts","basket","setBasket","JSON","parse","sessionStorage","getItem","loading","setLoading","lowStock","setLowStock","newLowStock","handleConfirm","handleCancel","openModalWithMessage","message","fetch","then","response","json","data","body","console","log","catch","error","CheckStockLevels","j","length","basketProduct","productInBasket","find","product","sku","S","handleStockCheck","remainingProduct","inventory_count","N","amount","name","itemAlreadyInLowStock","some","item","lowEmailSent","BOOL","push"],"sources":["D:/Github/Sense2MeNew/sense2me-client/src/pages/Users/Basket.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport NavBar from \"../../components/NavBar\";\r\nimport Modal from \"../../components/Modal\"; // Import your Modal component\r\nimport \"./Basket.css\";\r\n\r\nfunction Basket() {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalMessage, setModalMessage] = useState('');\r\n  const [products, setProducts] = useState([]);\r\n  const [basket, setBasket] = useState(JSON.parse(sessionStorage.getItem(\"basket\")) || []);\r\n  const [loading, setLoading] = useState(true);\r\n  const [lowStock, setLowStock] = useState([]);\r\n  const newLowStock = [];\r\n\r\n  const handleConfirm = () => {\r\n    // Perform actions when user confirms\r\n    setShowModal(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const openModalWithMessage = (message) => {\r\n    setModalMessage(message);\r\n    setShowModal(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch('https://y6wf50h2e4.execute-api.eu-west-1.amazonaws.com/dev/getProductDalek')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setProducts(JSON.parse(data.body));\r\n        console.log(products)\r\n        setLoading(false);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  function CheckStockLevels() {\r\n    for (let j = 0; j < basket.length; j++) {\r\n      const basketProduct = basket[j];\r\n      const productInBasket = products.find(\r\n        (product) => product.sku.S === basketProduct.sku\r\n      );\r\n\r\n      if (productInBasket) {\r\n        handleStockCheck(basketProduct, productInBasket);\r\n\r\n        const remainingProduct = productInBasket.inventory_count.N - basketProduct.amount;\r\n        console.log(remainingProduct);\r\n\r\n        if (remainingProduct <= 3) {\r\n          console.log(\r\n            \"Low Stock for: \",\r\n            productInBasket.name.S,\r\n            \" Amount Left: \",\r\n            remainingProduct\r\n          );\r\n\r\n          const itemAlreadyInLowStock = newLowStock.some(\r\n            (item) => item.name.S === productInBasket.name.S\r\n          );\r\n\r\n          productInBasket.lowEmailSent.BOOL = true;\r\n          productInBasket.inventory_count.N = remainingProduct;\r\n          console.log(\"product\", productInBasket);\r\n\r\n          if (!itemAlreadyInLowStock && productInBasket.lowEmailSent === true) {\r\n            newLowStock.push(productInBasket);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleStockCheck(basketProduct, productInBasket) {\r\n    if (basketProduct.amount > productInBasket.inventory_count.N) {\r\n      openModalWithMessage(\r\n        \"Not Enough Stock for: \" +\r\n        basketProduct.name +\r\n        \". Being changed to: \" +\r\n        productInBasket.inventory_count.N +\r\n        \". Do you wish to proceed?\"\r\n      );\r\n    }\r\n  }\r\n\r\n  // Other functions (add, subtract, CheckOut, etc.) ...\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <NavBar />\r\n      <div className=\"content-main-basket\">\r\n        {/* Table and other content */}\r\n        <button onClick={() => openModalWithMessage('Not Enough Stock. Do you wish to proceed?')}>\r\n          Show Modal\r\n        </button>\r\n        {showModal && (\r\n          <Modal\r\n            message={modalMessage}\r\n            onConfirm={handleConfirm}\r\n            onCancel={handleCancel}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Basket;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,KAAK,MAAM,wBAAwB,CAAC,CAAC;AAC5C,OAAO,cAAc;AAAC;AAEtB,SAASC,MAAM,GAAG;EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAACe,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC;EACxF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMuB,WAAW,GAAG,EAAE;EAEtB,MAAMC,aAAa,GAAG,MAAM;IAC1B;IACAhB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMiB,YAAY,GAAG,MAAM;IACzBjB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMkB,oBAAoB,GAAIC,OAAO,IAAK;IACxCjB,eAAe,CAACiB,OAAO,CAAC;IACxBnB,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAEDP,SAAS,CAAC,MAAM;IACd2B,KAAK,CAAC,4EAA4E,CAAC,CAChFC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZpB,WAAW,CAACG,IAAI,CAACC,KAAK,CAACgB,IAAI,CAACC,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACxB,QAAQ,CAAC;MACrBS,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDgB,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;MACpBjB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,SAASkB,gBAAgB,GAAG;IAC1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1B,MAAM,CAAC2B,MAAM,EAAED,CAAC,EAAE,EAAE;MACtC,MAAME,aAAa,GAAG5B,MAAM,CAAC0B,CAAC,CAAC;MAC/B,MAAMG,eAAe,GAAG/B,QAAQ,CAACgC,IAAI,CAClCC,OAAO,IAAKA,OAAO,CAACC,GAAG,CAACC,CAAC,KAAKL,aAAa,CAACI,GAAG,CACjD;MAED,IAAIH,eAAe,EAAE;QACnBK,gBAAgB,CAACN,aAAa,EAAEC,eAAe,CAAC;QAEhD,MAAMM,gBAAgB,GAAGN,eAAe,CAACO,eAAe,CAACC,CAAC,GAAGT,aAAa,CAACU,MAAM;QACjFjB,OAAO,CAACC,GAAG,CAACa,gBAAgB,CAAC;QAE7B,IAAIA,gBAAgB,IAAI,CAAC,EAAE;UACzBd,OAAO,CAACC,GAAG,CACT,iBAAiB,EACjBO,eAAe,CAACU,IAAI,CAACN,CAAC,EACtB,gBAAgB,EAChBE,gBAAgB,CACjB;UAED,MAAMK,qBAAqB,GAAG9B,WAAW,CAAC+B,IAAI,CAC3CC,IAAI,IAAKA,IAAI,CAACH,IAAI,CAACN,CAAC,KAAKJ,eAAe,CAACU,IAAI,CAACN,CAAC,CACjD;UAEDJ,eAAe,CAACc,YAAY,CAACC,IAAI,GAAG,IAAI;UACxCf,eAAe,CAACO,eAAe,CAACC,CAAC,GAAGF,gBAAgB;UACpDd,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEO,eAAe,CAAC;UAEvC,IAAI,CAACW,qBAAqB,IAAIX,eAAe,CAACc,YAAY,KAAK,IAAI,EAAE;YACnEjC,WAAW,CAACmC,IAAI,CAAChB,eAAe,CAAC;UACnC;QACF;MACF;IACF;EACF;EAEA,SAASK,gBAAgB,CAACN,aAAa,EAAEC,eAAe,EAAE;IACxD,IAAID,aAAa,CAACU,MAAM,GAAGT,eAAe,CAACO,eAAe,CAACC,CAAC,EAAE;MAC5DxB,oBAAoB,CAClB,wBAAwB,GACxBe,aAAa,CAACW,IAAI,GAClB,sBAAsB,GACtBV,eAAe,CAACO,eAAe,CAACC,CAAC,GACjC,2BAA2B,CAC5B;IACH;EACF;;EAEA;;EAEA,oBACE;IAAK,SAAS,EAAC,SAAS;IAAA,wBACtB,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV;MAAK,SAAS,EAAC,qBAAqB;MAAA,wBAElC;QAAQ,OAAO,EAAE,MAAMxB,oBAAoB,CAAC,2CAA2C,CAAE;QAAA,UAAC;MAE1F;QAAA;QAAA;QAAA;MAAA,QAAS,EACRnB,SAAS,iBACR,QAAC,KAAK;QACJ,OAAO,EAAEE,YAAa;QACtB,SAAS,EAAEe,aAAc;QACzB,QAAQ,EAAEC;MAAa;QAAA;QAAA;QAAA;MAAA,QAE1B;IAAA;MAAA;MAAA;MAAA;IAAA,QACG;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA1GQnB,MAAM;AAAA,KAANA,MAAM;AA4Gf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}