{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\Sense2MeNew\\\\sense2me-client\\\\src\\\\pages\\\\Users\\\\CreateUser.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport NavBar from \"../../components/NavBar\";\nimport \"./CreateUser.css\";\n\n//hashings & salt\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst crypto = require('crypto');\nfunction CreateUser() {\n  _s();\n  useEffect(() => {\n    fetch('https://y6wf50h2e4.execute-api.eu-west-1.amazonaws.com/dev/getProductDalek', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      setItems(JSON.parse(data.body));\n      console.log(JSON.parse(data.body));\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  useEffect(() => {\n    const form = document.getElementById(\"create-user\");\n    form.addEventListener(\"submit\", handleForm);\n    return () => {\n      form.removeEventListener(\"submit\", handleForm);\n    };\n  }, []);\n  function handleForm(event) {\n    event.preventDefault();\n    const username = document.getElementById(\"username\").value;\n    const email = document.getElementById(\"email\").value;\n    const password1 = document.getElementById(\"password\").value;\n    const password2 = document.getElementById(\"password-final\").value;\n\n    // Validation\n    if (password1 !== password2) {\n      window.alert(\"Passwords do not match\");\n      return;\n    }\n    if (!username || !email || !password1) {\n      window.alert(\"All fields are required.\");\n      return;\n    }\n\n    //hash and salt\n    const salt = crypto.randomBytes(16).toString('hex');\n    const passwordWithSalt = password2 + salt;\n    console.log(salt);\n    const hash = crypto.createHash('sha256').update(passwordWithSalt).digest('hex');\n    fetch(\"https://bfigqxbjve.execute-api.eu-west-1.amazonaws.com/default/postCreateOrder\", {\n      mode: \"cors\",\n      method: \"POST\",\n      body: JSON.stringify({\n        name: username,\n        email: email,\n        password: hash,\n        salt: salt,\n        isAdmin: false\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      if (res.status === 409) {\n        // User already exists, show alert message\n        window.alert('User already exists with this email');\n      }\n    }).then(data => {\n      window.alert(\"Posted Correctly\");\n      document.getElementById(\"create-user\").reset();\n    }).catch(error => {\n      console.error('There was a problem with the fetch operation:', error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CreateUser\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-main\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"create-user\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          placeholder: \"Username\",\n          className: \"text-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          placeholder: \"Email\",\n          className: \"text-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          placeholder: \"Password\",\n          className: \"text-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password-final\",\n          placeholder: \"Confirm Password\",\n          className: \"text-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateUser, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n_c = CreateUser;\nexport default CreateUser;\nvar _c;\n$RefreshReg$(_c, \"CreateUser\");","map":{"version":3,"names":["React","useEffect","NavBar","crypto","require","CreateUser","fetch","method","headers","then","response","json","data","setItems","JSON","parse","body","console","log","catch","error","form","document","getElementById","addEventListener","handleForm","removeEventListener","event","preventDefault","username","value","email","password1","password2","window","alert","salt","randomBytes","toString","passwordWithSalt","hash","createHash","update","digest","mode","stringify","name","password","isAdmin","res","ok","status","reset"],"sources":["D:/Github/Sense2MeNew/sense2me-client/src/pages/Users/CreateUser.js"],"sourcesContent":["import React, {useEffect} from \"react\";\r\nimport NavBar from \"../../components/NavBar\";\r\n\r\nimport \"./CreateUser.css\";\r\n\r\n//hashings & salt\r\nconst crypto = require('crypto');\r\n\r\nfunction CreateUser(){\r\n\r\n  useEffect(() => {\r\n    fetch('https://y6wf50h2e4.execute-api.eu-west-1.amazonaws.com/dev/getProductDalek', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setItems(JSON.parse(data.body));\r\n        console.log(JSON.parse(data.body));\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n    }, []);\r\n\r\n  useEffect(() => {\r\n    const form = document.getElementById(\"create-user\");\r\n    form.addEventListener(\"submit\", handleForm);\r\n    return () => {\r\n      form.removeEventListener(\"submit\", handleForm);\r\n    };\r\n  }, []);\r\n\r\n  function handleForm(event) {\r\n    event.preventDefault();\r\n    \r\n    const username = document.getElementById(\"username\").value;\r\n    const email = document.getElementById(\"email\").value;\r\n    const password1 = document.getElementById(\"password\").value;\r\n    const password2 = document.getElementById(\"password-final\").value;\r\n\r\n    // Validation\r\n    if(password1 !== password2){\r\n      window.alert(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    if (!username || !email || !password1) {\r\n      window.alert(\"All fields are required.\");\r\n      return;\r\n    }\r\n\r\n    //hash and salt\r\n    const salt = crypto.randomBytes(16).toString('hex');\r\n    const passwordWithSalt = password2 + salt;\r\n    console.log(salt);\r\n    const hash = crypto.createHash('sha256').update(passwordWithSalt).digest('hex');\r\n\r\n    fetch(\"https://bfigqxbjve.execute-api.eu-west-1.amazonaws.com/default/postCreateOrder\", {\r\n      mode: \"cors\", \r\n      method:\"POST\", \r\n      body: JSON.stringify({\r\n        name: username, \r\n        email: email, \r\n        password: hash,\r\n        salt: salt,\r\n        isAdmin: false\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      }\r\n    })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      if (res.status === 409) {\r\n        // User already exists, show alert message\r\n        window.alert('User already exists with this email');\r\n      }})\r\n    .then(data => {\r\n      window.alert(\"Posted Correctly\");\r\n      document.getElementById(\"create-user\").reset();\r\n    })\r\n    .catch(error => {\r\n      console.error('There was a problem with the fetch operation:', error);\r\n    });\r\n  }\r\n\r\n    return(\r\n        <div className=\"CreateUser\">\r\n          <NavBar />\r\n            <div className=\"content-main\">\r\n              <form id=\"create-user\">\r\n                <label>Username:</label>\r\n                <input type=\"text\" id=\"username\" placeholder=\"Username\" className=\"text-input\"/>\r\n                <label>Email:</label>\r\n                <input type=\"text\" id=\"email\" placeholder=\"Email\" className=\"text-input\"/>\r\n                <label>Password:</label>\r\n                <input type=\"password\" id=\"password\" placeholder=\"Password\" className=\"text-input\"/>\r\n                <label>Confirm Password:</label>\r\n                <input type=\"password\" id=\"password-final\" placeholder=\"Confirm Password\" className=\"text-input\"/>\r\n                <button type=\"submit\">Create</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default CreateUser;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}