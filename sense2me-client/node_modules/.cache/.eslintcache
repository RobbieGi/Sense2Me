[{"D:\\Github\\Sense2MeNew\\sense2me-client\\src\\index.js":"1","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\App.js":"2","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\reportWebVitals.js":"3","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\pages\\shop.js":"4","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\pages\\product.js":"5","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\pages\\home.js":"6","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\pages\\login.js":"7","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\pages\\contact-us.js":"8","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\pages\\admin\\admin-console.js":"9","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\components\\admin\\AddProduct.js":"10","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\components\\NavBar.js":"11","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\api\\get-api.js":"12","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\components\\Users\\ProductShopPage.js":"13","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\components\\Users\\ProductDetailsShop.js":"14","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\pages\\Users\\CreateUser.js":"15","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\components\\admin\\CreateAdmin.js":"16","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\components\\admin\\UpdateProduct.js":"17","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\components\\admin\\CreateOrder.js":"18","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\components\\admin\\viewCustomers.js":"19","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\pages\\Users\\Basket.js":"20","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\components\\Modal\\confirmModal.js":"21","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\components\\Users\\changeDetails.js":"22","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\components\\admin\\DeleteProducts.js":"23"},{"size":552,"mtime":1693520022761,"results":"24","hashOfConfig":"25"},{"size":1369,"mtime":1693520022739,"results":"26","hashOfConfig":"25"},{"size":375,"mtime":1693520022769,"results":"27","hashOfConfig":"25"},{"size":2444,"mtime":1693520022769,"results":"28","hashOfConfig":"25"},{"size":1430,"mtime":1693520022768,"results":"29","hashOfConfig":"25"},{"size":236,"mtime":1693520022765,"results":"30","hashOfConfig":"25"},{"size":2303,"mtime":1693520422156,"results":"31","hashOfConfig":"25"},{"size":260,"mtime":1693520022765,"results":"32","hashOfConfig":"25"},{"size":3116,"mtime":1693520638586,"results":"33","hashOfConfig":"25"},{"size":4613,"mtime":1693520022752,"results":"34","hashOfConfig":"25"},{"size":2183,"mtime":1693520422151,"results":"35","hashOfConfig":"25"},{"size":605,"mtime":1685998910118,"results":"36","hashOfConfig":"25"},{"size":585,"mtime":1693520022744,"results":"37","hashOfConfig":"25"},{"size":2658,"mtime":1693520022744,"results":"38","hashOfConfig":"25"},{"size":4407,"mtime":1693520022763,"results":"39","hashOfConfig":"25"},{"size":2912,"mtime":1693520022752,"results":"40","hashOfConfig":"25"},{"size":5410,"mtime":1693520422153,"results":"41","hashOfConfig":"25"},{"size":6462,"mtime":1693520422152,"results":"42","hashOfConfig":"25"},{"size":4281,"mtime":1693520422154,"results":"43","hashOfConfig":"25"},{"size":10387,"mtime":1693520422154,"results":"44","hashOfConfig":"25"},{"size":441,"mtime":1693520022741,"results":"45","hashOfConfig":"25"},{"size":4216,"mtime":1693520022751,"results":"46","hashOfConfig":"25"},{"size":5377,"mtime":1693520022754,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3reiho",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},"D:\\Github\\Sense2MeNew\\sense2me-client\\src\\index.js",[],[],"D:\\Github\\Sense2MeNew\\sense2me-client\\src\\App.js",["131"],[],"import React from \"react\";\r\nimport {BrowserRouter, Routes, Route, Outlet} from \"react-router-dom\";\r\n\r\nimport \"./App.css\"\r\n\r\n//Customer Pages\r\nimport Shop from \"./pages/shop\";\r\nimport Home from \"./pages/home\";\r\nimport Product from \"./pages/product\";\r\nimport ContactUs from \"./pages/contact-us\";\r\nimport Login from \"./pages/login\"\r\nimport CreateUser from \"./pages/Users/CreateUser\"\r\nimport Basket from \"./pages/Users/Basket\";\r\nimport ChangeDetails from \"./components/Users/changeDetails\";\r\n\r\n//Admin Pages\r\nimport AddProduct from \"./components/admin/AddProduct\";\r\nimport AdminConsole from \"./pages/admin/admin-console\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route exact path=\"/\" element={<Home />}/>\r\n        <Route path=\"/shop\" element={<Shop />} />\r\n        <Route path=\"/product\" element={<Product />} />\r\n        <Route path=\"/contact\" element={<ContactUs />}/>\r\n        <Route path=\"/login\" element={<Login />}/>\r\n        <Route path=\"/add-product\" element={<AddProduct />}/>\r\n        <Route path=\"/admin-console\" element={<AdminConsole />}/>\r\n        <Route path=\"/createUser\" element={<CreateUser />}></Route>\r\n        <Route path=\"/basket\" element={<Basket />}></Route>\r\n        <Route path=\"/change-details\" element={<ChangeDetails />}></Route>\r\n      </Routes>\r\n</BrowserRouter>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\reportWebVitals.js",[],[],"D:\\Github\\Sense2MeNew\\sense2me-client\\src\\pages\\shop.js",["132","133"],[],"import React, { useEffect, useState } from 'react';\r\nimport ProductShopPage from '../components/Users/ProductShopPage';\r\nimport NavBar from '../components/NavBar';\r\nimport './shop.css';\r\n\r\nconst basket = JSON.parse(sessionStorage.getItem('basket')) || [];\r\n\r\nfunction Shop() {\r\n  const [items, setItems] = useState([]);\r\n  const filteredItems = items.filter((item) => item.inventory_count.N !== '0');\r\n\r\n  function CheckStockLevels() {\r\n    for (let i = 0; i < items.length; i++) {\r\n      for (let j = 0; j < basket.length; j++) {\r\n        if (basket[j].sku === items[i].sku.S) {\r\n          if (basket[j].amount > items[i].inventory_count.N) {\r\n            console.log('Hello');\r\n            const proceedWithReducedStock = window.confirm(\r\n              'Not Enough Stock for: ' + basket[j].name + '. Being changed to: ' + items[i].inventory_count.N + '. Do you wish to proceed?'\r\n            );\r\n\r\n            if (proceedWithReducedStock) {\r\n              basket[j].amount = items[i].inventory_count.N;\r\n            } else {\r\n              basket.splice(j, 1);\r\n              console.log(basket);\r\n            }\r\n\r\n            sessionStorage.setItem('basket', JSON.stringify(basket));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch('https://y6wf50h2e4.execute-api.eu-west-1.amazonaws.com/dev/getProductDalek', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setItems(JSON.parse(data.body));\r\n        console.log(JSON.parse(data.body));\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n\r\n    // Call CheckStockLevels here as well, to check stock levels after fetching data\r\n    if (basket.length !== 0) {\r\n      console.log('Checking Stock');\r\n      CheckStockLevels();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (basket.length !== 0 && items.length !== 0) {\r\n      console.log(\"Checking Stock\")\r\n      CheckStockLevels();\r\n    }\r\n  }, [ items]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Shop\">\r\n        <NavBar />\r\n        <div className=\"wrapper-shop\">\r\n          {filteredItems.length === 0 ? (\r\n            <h2>No Stock Available</h2>\r\n          ) : (\r\n            filteredItems.map((item) => <ProductShopPage key={item.sku.S} items={item} />)\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Shop;\r\n","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\pages\\product.js",["134"],[],"import React from 'react';\r\nimport  {useParams} from 'react-router-dom';\r\n\r\nimport \"./product.css\";\r\n\r\nimport picture from \"../images/double-beaded-roller.jpg\";\r\n\r\nimport NavBar from \"../components/NavBar\";\r\n\r\nfunction Product() {\r\n\r\n    return(\r\n        <div className=\"product\">\r\n            <NavBar/>\r\n            <div className=\"product-page-content\">\r\n                <div className=\"left\">\r\n                    <div className=\"product-image\">\r\n                        <img src={picture} alt=\"Double Beaded Roller\" className=\"product-img-lrg\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"right\">\r\n                    <div className=\"title\"><h1>Double Beaded Anxiety Roller</h1></div>\r\n                    <div className=\"price-product-page\"><h2>7.20</h2></div>\r\n                    <div className=\"delivery-info\">Free Delivery</div>\r\n                    <div className=\"selection flex\">\r\n                        <select name=\"colors\" className=\"select-bar flex\">\r\n                            <option value=\"red\">Red</option>\r\n                            <option value=\"blue\">Blue</option>\r\n                            <option value=\"yellow\">Yellow</option>\r\n                            <option value=\"pink\">Pink</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Product;","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\pages\\home.js",["135","136"],[],"import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport NavBar from \"../components/NavBar\";\r\nimport Shop from \"./shop\";\r\n\r\nfunction Home(){\r\n    \r\n    return(\r\n        <NavBar />\r\n    );\r\n\r\n}\r\n\r\nexport default Home;","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\pages\\login.js",[],[],"D:\\Github\\Sense2MeNew\\sense2me-client\\src\\pages\\contact-us.js",[],[],"D:\\Github\\Sense2MeNew\\sense2me-client\\src\\pages\\admin\\admin-console.js",["137"],[],"import React, {useEffect, useState} from \"react\";\r\n\r\n//css\r\nimport \"./admin-console.css\";\r\n\r\n//NavBar\r\nimport NavBar from \"../../components/NavBar\";\r\n\r\n//Admin Componenets\r\nimport AddProduct from \"../../components/admin/AddProduct\";\r\nimport CreateAdmin from \"../../components/admin/CreateAdmin\";\r\nimport UpdateProduct from \"../../components/admin/UpdateProduct\";\r\nimport CreateOrder from \"../../components/admin/CreateOrder\";\r\nimport ViewCustomers from \"../../components/admin/viewCustomers\";\r\nimport DeleteProduct from \"../../components/admin/DeleteProducts\";\r\nimport ChangeDetails from \"../../components/Users/changeDetails\";\r\n\r\nfunction AdminConsole(){\r\n\r\n    useEffect(() => {\r\n        console.log(sessionStorage.getItem('isAdmin'))\r\n        if(sessionStorage.getItem('isAdmin') === 'false' && sessionStorage.getItem('isAuth') === 'true'){\r\n            console.log(\"NOT ADMIN!!!\")\r\n            window.location.href = '/shop';\r\n        }\r\n        if(sessionStorage.getItem('isAdmin') === 'false' && sessionStorage.getItem('isAuth') === 'false'){\r\n            console.log(\"NOT ADMIN!!!\")\r\n            window.location.href = '/login';\r\n        }\r\n    })\r\n\r\n    const [currentComponent, setCurrentComponent] = useState('AddProduct');\r\n\r\n    const renderComponent = () => {\r\n        switch (currentComponent) {\r\n          case \"AddProduct\":\r\n            return <AddProduct />;\r\n        case \"CreateAdmin\":\r\n            return <CreateAdmin />;\r\n        case \"UpdateProduct\":\r\n            return <UpdateProduct />;\r\n        case \"CreateOrder\":\r\n            return <CreateOrder />;\r\n        case \"ViewCustomers\":\r\n            return <ViewCustomers />;\r\n        case \"DeleteProduct\":\r\n            return <DeleteProduct />;\r\n        case \"ChangeDetails\":\r\n            return <ChangeDetails />;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"AdminConsole\">\r\n            <NavBar/>\r\n            <div className=\"sidebar\">\r\n                <h1 className=\"sidebar-margin-sml\">Menu</h1>\r\n                <h3 className=\"sidebar-margin-lrg sidebar-btn\" onClick={() => setCurrentComponent(\"CreateAdmin\")}>Create Admin</h3> \r\n                <h3 className=\"sidebar-margin-lrg sidebar-btn\" onClick={() => setCurrentComponent(\"AddProduct\")}>Add Product</h3>  \r\n                <h3 className=\"sidebar-margin-lrg sidebar-btn\" onClick={() => setCurrentComponent(\"UpdateProduct\")}>Update Product</h3>\r\n                <h3 className=\"sidebar-margin-lrg sidebar-btn\" onClick={() => setCurrentComponent(\"DeleteProduct\")}>Delete Product</h3>\r\n                <h3 className=\"sidebar-margin-lrg sidebar-btn\" onClick={() => setCurrentComponent(\"ViewCustomers\")}>View Customers</h3>  \r\n                <h3 className=\"sidebar-margin-lrg sidebar-btn\" onClick={() => setCurrentComponent(\"CreateOrder\")}>View Orders</h3>\r\n                <h3 className=\"sidebar-margin-lrg sidebar-btn\" onClick={() => setCurrentComponent(\"ChangeDetails\")}>Change Details</h3>\r\n            </div>\r\n            <div className=\"content-admin\">\r\n                {renderComponent()}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default AdminConsole;","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\components\\admin\\AddProduct.js",["138"],[],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport \"./AddProduct.css\";\r\n\r\nfunction AddProduct(){\r\n\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const form = document.getElementById(\"product-form\");\r\n    form.addEventListener(\"submit\", handleForm);\r\n    return () => {\r\n      form.removeEventListener(\"submit\", handleForm);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch('https://y6wf50h2e4.execute-api.eu-west-1.amazonaws.com/dev/getProductDalek', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setItems(JSON.parse(data.body));\r\n        console.log(JSON.parse(data.body));\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n    }, []);\r\n\r\n    const findProductBySku = (sku) => {\r\n      const lowerCaseSku = sku.toLowerCase();\r\n    \r\n      const matchingItem = items.find((item) => {\r\n        // Check if the SKU property exists and is a string\r\n        if (item.sku.S) {\r\n          console.log('Database SKU:', item.sku.S);\r\n          console.log('Input SKU:', lowerCaseSku);\r\n          console.log('Comparison Result:', item.sku.S.toLowerCase() === lowerCaseSku);\r\n          return item.sku.S.toLowerCase() === lowerCaseSku;\r\n        }\r\n        return false; // If the SKU property is not a string, it won't match\r\n      });\r\n    \r\n      console.log('Matching Item:', matchingItem);\r\n      return matchingItem;\r\n    };\r\n    \r\n\r\n  function handleForm(event) {\r\n    event.preventDefault();\r\n  \r\n    const sku = document.getElementById(\"sku\").value;\r\n    const name = document.getElementById(\"name\").value;\r\n    const price = parseFloat(document.getElementById(\"price\").value);\r\n    const description = document.getElementById(\"description\").value;\r\n    const image_url = document.getElementById(\"image_url\").value;\r\n    const inventory_count = parseInt(document.getElementById(\"inventory_count\").value);\r\n  \r\n    if(findProductBySku(sku)){\r\n      console.log(\"hello\")\r\n      window.alert(\"Need a unique SKU as this is already in the system\")\r\n      return;\r\n    }\r\n\r\n    // Validation\r\n    if (!name || !price || !description || !image_url || !inventory_count || !sku) {\r\n      window.alert(\"All fields are required.\");\r\n      return;\r\n    }\r\n  \r\n    console.log(name, price, description, image_url, inventory_count, sku);\r\n\r\n    fetch(\"https://oeblau5cyl.execute-api.eu-west-1.amazonaws.com/dev/postProductDalek\", {\r\n      mode: \"cors\",\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        sku: sku, // Fix: Pass the SKU value correctly\r\n        name: name,\r\n        price: price,\r\n        description: description,\r\n        image_url: image_url,\r\n        inventory_count: inventory_count,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          console.log(res)\r\n          return res.json();\r\n        }\r\n        throw new Error(\"Request failed!\");\r\n      })\r\n      .then((data) => {\r\n        window.alert(\"Posted Correctly\");\r\n        console.log(data);\r\n        document.getElementById(\"product-form\").reset();\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was a problem with the fetch operation:\", error);\r\n      });\r\n  }\r\n    \r\n      return(\r\n        <div className=\"AddProduct\">\r\n          <div className=\"content-main\">\r\n              <form id=\"product-form\">\r\n                <label>Add Product</label>\r\n                <label>SKU:</label>\r\n                <input type=\"text\" id=\"sku\" placeholder=\"sku\" className=\"text-input\"/>\r\n                <label>Product Name:</label>\r\n                <input type=\"text\" id=\"name\" placeholder=\"product-name\" className=\"text-input\"/>\r\n                <label>Product Price:</label>\r\n                <input type=\"float\" id=\"price\" placeholder=\"product-price\" className=\"text-input\"/>\r\n                <label>Product Description:</label>\r\n                <input type=\"text\" id=\"description\" placeholder=\"product-description\" className=\"text-input\"/>\r\n                <label>Product Image Link:</label>\r\n                <input type=\"text\" id=\"image_url\" placeholder=\"product-image\" className=\"text-input\"/>\r\n                <label>Amount of Products:</label>\r\n                <input type=\"number\" id=\"inventory_count\" placeholder=\"product-amount\" className=\"text-input\" min=\"1\"/>\r\n                <button type=\"submit\">Add Product</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n};\r\n\r\nexport default AddProduct;","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\components\\NavBar.js",[],[],"D:\\Github\\Sense2MeNew\\sense2me-client\\src\\api\\get-api.js",[],[],"D:\\Github\\Sense2MeNew\\sense2me-client\\src\\components\\Users\\ProductShopPage.js",[],[],"D:\\Github\\Sense2MeNew\\sense2me-client\\src\\components\\Users\\ProductDetailsShop.js",["139"],[],"import React, { useState, useEffect } from \"react\";\r\nimport \"./ProductDetailsShop.css\";\r\n\r\nconst basket = JSON.parse(sessionStorage.getItem(\"basket\")) || []; // Define the basket array outside the component function\r\n\r\nfunction ProductDetailsShop(props) {\r\n  const [basketSize, setBasketSize] = useState(0);\r\n  const [stock, setStock] = useState(null)\r\n\r\n  useEffect(() => {\r\n    // Calculate the total amount in the basket\r\n    let totalInBasket = 0;\r\n    for (const item of basket) {\r\n      console.log(item)\r\n      if (item.sku === props.items.items.sku.S) {\r\n        totalInBasket += item.amount;\r\n      }\r\n    }\r\n\r\n    console.log(basket)\r\n\r\n    // Calculate the remaining stock after considering the items in the basket\r\n    const remainingStock = parseInt(props.items.items.inventory_count.N, 10) - totalInBasket;\r\n    setStock(remainingStock);\r\n  }, [props.items.items.inventory_count.N, props.items.items.sku.S]);\r\n\r\n  function addToBasket() {\r\n    if(stock === 0){\r\n      alert(\"Maximum Stock Aquired\")\r\n    }else{\r\n      let existingProductIndex = -1;\r\n    \r\n      for (let i = 0; i < basket.length; i++) {\r\n        if (basket[i].sku === props.items.items.sku.S) {\r\n          existingProductIndex = i;\r\n          break;\r\n        }\r\n      }\r\n    \r\n      if (existingProductIndex !== -1) {\r\n        console.log(\"Take Away one Existing Entry\");\r\n        basket[existingProductIndex].amount = parseInt(basket[existingProductIndex].amount, 10) + 1;\r\n        setStock((prevStock) => prevStock - 1);\r\n      } else {\r\n        console.log(\"Take Away one New Entry\");\r\n        setStock((prevStock) => prevStock - 1);\r\n        basket.push({\r\n          sku: props.items.items.sku.S,\r\n          price: props.items.items.price.N,\r\n          name: props.items.items.name.S,\r\n          image_url: props.items.items.image_url.S,\r\n          description: props.items.items.description.S,\r\n          amount: 1,\r\n        });\r\n      }\r\n    }\r\n  \r\n    sessionStorage.setItem(\"basket\", JSON.stringify(basket));\r\n    setBasketSize(basket.length);\r\n  }\r\n  \r\n\r\n    return(\r\n\r\n        <div className=\"product-details\">\r\n          <div className=\"top\">\r\n            <h3 className=\"title\">{props.items.items.name.S}</h3>\r\n              <div className=\"price-wrapper\" onClick={addToBasket}>\r\n                  <ion-icon name=\"add-circle-outline\"></ion-icon>\r\n                  <h3 className=\"price-tag\">{props.items.items.price.N}</h3>\r\n              </div>\r\n            </div>\r\n            <div className=\"bottom\">\r\n              <h4 className=\"inventory-count\">Stock Amount: {stock}</h4>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default ProductDetailsShop;","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\pages\\Users\\CreateUser.js",["140"],[],"import React, {useEffect, useState} from \"react\";\r\nimport NavBar from \"../../components/NavBar\";\r\n\r\nimport \"./CreateUser.css\";\r\n\r\n//hashings & salt\r\nconst crypto = require('crypto');\r\n\r\nfunction CreateUser(){\r\n\r\n  const [users, setUsers] = useState([])\r\n\r\n  useEffect(() => {\r\n    fetch('https://y6wf50h2e4.execute-api.eu-west-1.amazonaws.com/dev/getProductDalek', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(JSON.parse(data.body));\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      fetch('https://d93b7k76j9.execute-api.eu-west-1.amazonaws.com/default/getAllUsersDalek', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(\"body\", JSON.parse(data.body))\r\n          setUsers(JSON.parse(data.body));\r\n          console.log(JSON.parse(data.body));\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }, []);\r\n\r\n  useEffect(() => {\r\n    const form = document.getElementById(\"create-user\");\r\n    form.addEventListener(\"submit\", handleForm);\r\n    return () => {\r\n      form.removeEventListener(\"submit\", handleForm);\r\n    };\r\n  }, []);\r\n\r\n  function checkDetails(uname){\r\n    console.log(\"Inside the Checking Username\")\r\n    for (let i = 0; i < users.length; i++) {\r\n      console.log(\"Input: \",uname, \"DB \", users[i].userID.S)\r\n      if(uname === users[i].userID.S){\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleForm(event) {\r\n    event.preventDefault();\r\n    \r\n    const username = document.getElementById(\"username\").value;\r\n    const email = document.getElementById(\"email\").value;\r\n    const password1 = document.getElementById(\"password\").value;\r\n    const password2 = document.getElementById(\"password-final\").value;\r\n\r\n    // Validation\r\n    if(password1 !== password2){\r\n      window.alert(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    if (!username || !email || !password1) {\r\n      window.alert(\"All fields are required.\");\r\n      return;\r\n    }\r\n\r\n    //hash and salt\r\n    const salt = crypto.randomBytes(16).toString('hex');\r\n    const passwordWithSalt = password2 + salt;\r\n    console.log(salt);\r\n    const hash = crypto.createHash('sha256').update(passwordWithSalt).digest('hex');\r\n\r\n    if(!checkDetails(username)){\r\n      fetch(\"https://bfigqxbjve.execute-api.eu-west-1.amazonaws.com/default/postCreateOrder\", {\r\n      mode: \"cors\", \r\n      method:\"POST\", \r\n      body: JSON.stringify({\r\n        name: username, \r\n        email: email, \r\n        password: hash,\r\n        salt: salt,\r\n        isAdmin: false\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      }\r\n    })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      if (res.status === 409) {\r\n        // User already exists, show alert message\r\n        window.alert('User already exists with this email');\r\n      }})\r\n    .then(data => {\r\n      window.alert(\"Posted Correctly\");\r\n      document.getElementById(\"create-user\").reset();\r\n    })\r\n    .catch(error => {\r\n      console.error('There was a problem with the fetch operation:', error);\r\n    });\r\n    }\r\n    else{\r\n      window.alert(\"Username already exists\")\r\n    }\r\n    \r\n  }\r\n\r\n    return(\r\n        <div className=\"CreateUser\">\r\n          <NavBar />\r\n            <div className=\"content-main\">\r\n              <form id=\"create-user\">\r\n                <label>Username:</label>\r\n                <input type=\"text\" id=\"username\" placeholder=\"Username\" className=\"text-input\"/>\r\n                <label>Email:</label>\r\n                <input type=\"text\" id=\"email\" placeholder=\"Email\" className=\"text-input\"/>\r\n                <label>Password:</label>\r\n                <input type=\"password\" id=\"password\" placeholder=\"Password\" className=\"text-input\"/>\r\n                <label>Confirm Password:</label>\r\n                <input type=\"password\" id=\"password-final\" placeholder=\"Confirm Password\" className=\"text-input\"/>\r\n                <button type=\"submit\">Create</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default CreateUser;","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\components\\admin\\CreateAdmin.js",[],[],"D:\\Github\\Sense2MeNew\\sense2me-client\\src\\components\\admin\\UpdateProduct.js",["141"],[],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport \"./UpdateProduct.css\";\r\n\r\nfunction UpdateProduct() {\r\n  const [product, setProduct] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(true); // Add a loading state\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://y6wf50h2e4.execute-api.eu-west-1.amazonaws.com/dev/getProductDalek\")\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(\"Request failed with status: \" + res.status);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        const parsedData = JSON.parse(data.body);\r\n        console.log(parsedData)\r\n        setProduct(parsedData);\r\n        setIsLoading(false); // Set loading to false when data is loaded\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error: \" + error);\r\n        setIsLoading(false); // Set loading to false on error as well\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (product.length > 0) {\r\n      updateFormValues(currentIndex);\r\n    }\r\n  }, [product, currentIndex]);\r\n\r\n  function updateFormValues(index) {\r\n    if (product.length > 0) {\r\n      const currentItem = product[index];\r\n      console.log(currentItem.sku.S)\r\n      document.getElementById(\"sku\").value = currentItem.sku.S;\r\n      document.getElementById(\"name\").value = currentItem.name.S;\r\n      document.getElementById(\"price\").value = currentItem.price.N;\r\n      document.getElementById(\"description\").value = currentItem.description.S;\r\n      document.getElementById(\"image\").value = currentItem.image_url.S;\r\n      document.getElementById(\"inventory_count\").value = currentItem.inventory_count.N;\r\n    }\r\n  }\r\n\r\n  function changeLeft() {\r\n    if (currentIndex === 0) {\r\n      alert(\"No More Records\");\r\n    } else {\r\n      setCurrentIndex((prevIndex) => prevIndex - 1);\r\n    }\r\n  }\r\n\r\n  function changeRight() {\r\n    if (currentIndex === product.length - 1) {\r\n      alert(\"No More Records\");\r\n    } else {\r\n      setCurrentIndex((prevIndex) => prevIndex + 1);\r\n    }\r\n  }\r\n\r\n  function handleForm(event) {\r\n    event.preventDefault();\r\n\r\n    const sku = document.getElementById(\"sku\").value;\r\n    const name = document.getElementById(\"name\").value;\r\n    const price = document.getElementById(\"price\").value;\r\n    const description = document.getElementById(\"description\").value;\r\n    const image_url = document.getElementById(\"image\").value;\r\n    const inventory_count = document.getElementById(\"inventory_count\").value;\r\n    var newLowEmailSent = false\r\n    if(inventory_count <= 3){\r\n      newLowEmailSent = true\r\n    }\r\n\r\n    fetch(\"https://0e93bn4q21.execute-api.eu-west-1.amazonaws.com/default/updateProductDalek\", {\r\n      mode: \"cors\",\r\n      method: \"PUT\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        sku: sku,\r\n        name: name,\r\n        price: price,\r\n        description: description,\r\n        image_url: image_url,\r\n        inventory_count: inventory_count,\r\n        lowEmailSent: newLowEmailSent\r\n      })\r\n    })\r\n    .then(response => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      throw new Error('Failed to replace product');\r\n    })\r\n    .then(data => {\r\n      window.alert(\"Product Replaced\");\r\n      document.getElementById(\"product-form\").reset();\r\n      window.location.reload();\r\n    })\r\n    .catch(error => {\r\n      console.error('Error replacing product:', error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"AddProduct\">\r\n      <div className=\"content-main\">\r\n        <div className=\"container\">\r\n          {isLoading ? ( // Check if data is loading\r\n            <p>Fetching products...</p> // Display loading message\r\n          ) : (\r\n            product.length > 0 && ( // Only render form when data is available\r\n            <form id=\"product-form\" onSubmit={handleForm}>\r\n            <label>Update Product</label>\r\n            <label>SKU:</label>\r\n            <input type=\"text\" id=\"sku\" placeholder=\"product-name\" className=\"text-input\" readOnly/>\r\n            <label>Product Name:</label>\r\n            <input type=\"text\" id=\"name\" placeholder=\"product-name\" className=\"text-input\" />\r\n            <label>Product Price:</label>\r\n            <input type=\"float\" id=\"price\" placeholder=\"product-price\" className=\"text-input\" />\r\n            <label>Product Description:</label>\r\n            <input type=\"text\" id=\"description\" placeholder=\"product-description\" className=\"text-input\" />\r\n            <label>Product Image Link:</label>\r\n            <input type=\"text\" id=\"image\" placeholder=\"product-image\" className=\"text-input\" />\r\n            <label>Amount of Products:</label>\r\n            <input type=\"number\" id=\"inventory_count\" placeholder=\"product-amount\" className=\"text-input\" min=\"1\" />\r\n            <button type=\"submit\">Update Product</button>\r\n          </form>\r\n            )\r\n          )}\r\n          {isLoading || ( // Disable buttons while loading\r\n            <>\r\n              <button className=\"movementBtns\" onClick={changeLeft} disabled={isLoading}>\r\n                Backwards\r\n              </button>\r\n              <button className=\"movementBtns\" onClick={changeRight} disabled={isLoading}>\r\n                Forwards\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateProduct;","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\components\\admin\\CreateOrder.js",["142"],[],"import React, {useEffect, useState} from \"react\";\r\n\r\nfunction CreateOrder(){\r\n  \r\n  const [items, setItems] = useState([]);\r\n  const [sortKey, setSortKey] = useState(\"date\");\r\n  const [sortOrder, setSortOrder] = useState(\"asc\");\r\n  const [completedStatus, setCompletedStatus] = useState({});  \r\n  const [orderTrackingNumbers, setOrderTrackingNumbers] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch('https://1blnclstr9.execute-api.eu-west-1.amazonaws.com/default/getOrdersDalek', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      const parsedData = JSON.parse(data.body);\r\n      console.log(\"API Response Data:\", parsedData);\r\n      setItems(parsedData);\r\n      \r\n      console.log(\"Parsed Data:\", parsedData);\r\n\r\n      // Extract the order IDs and completed statuses from the parsed data\r\n      const initialCompletedStatus = parsedData.reduce((acc, order) => {\r\n        const orderID = order.order_ID.S;\r\n        const completed = order.completed.BOOL;\r\n        acc[orderID] = completed;\r\n        return acc;\r\n      }, {});\r\n      \r\n      setCompletedStatus(initialCompletedStatus);\r\n\r\n      const initialOrderTrackingNumbers = parsedData.reduce((acc, order) => {\r\n        acc[order.order_ID.S] = order.RMtracker.S; // assuming RMtracker is the key for the order tracking number\r\n        return acc;\r\n      }, {});\r\n  \r\n      setOrderTrackingNumbers(initialOrderTrackingNumbers);\r\n      console.log(\"Initial Tracking Numbers:\", orderTrackingNumbers);\r\n    })\r\n    .catch(error => {\r\n      console.error(error);\r\n    });\r\n  }, []);\r\n\r\n    const handleSort = (key) => {\r\n      if (key === sortKey) {\r\n        setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\");\r\n      } else {\r\n        setSortKey(key);\r\n        setSortOrder(\"asc\");\r\n      }\r\n    };\r\n  \r\n    const sortedItems = items.slice().sort((a, b) => {\r\n      const valueA = a[sortKey];\r\n      const valueB = b[sortKey];\r\n    \r\n      if (valueA === undefined || valueA === null) {\r\n        return sortOrder === \"asc\" ? -1 : 1;\r\n      }\r\n      if (valueB === undefined || valueB === null) {\r\n        return sortOrder === \"asc\" ? 1 : -1;\r\n      }\r\n    \r\n      // Check if the values are numbers\r\n      const isNumericA = !isNaN(parseFloat(a.price.N)) && isFinite(a.price.N);\r\n      const isNumericB = !isNaN(parseFloat(b.price.N)) && isFinite(b.price.N);\r\n    \r\n      if (isNumericA && isNumericB) {\r\n        console.log(\"Hello numbers\");\r\n        const numericA = parseFloat(a.price.N);\r\n        const numericB = parseFloat(b.price.N);\r\n        return sortOrder === \"asc\" ? numericA - numericB : numericB - numericA;\r\n      } else {\r\n        console.log(\"Hello strings\");\r\n        const stringValueA = String(valueA).toLowerCase();\r\n        const stringValueB = String(valueB).toLowerCase();\r\n        return sortOrder === \"asc\" ? stringValueA.localeCompare(stringValueB) : stringValueB.localeCompare(stringValueA);\r\n      }\r\n    });\r\n    \r\n    const handleCheckboxChange = (order) => {\r\n      const newCompletedStatus = {\r\n        ...completedStatus,\r\n        [order.order_ID.S]: !completedStatus[order.order_ID.S],\r\n      };\r\n      setCompletedStatus(newCompletedStatus);\r\n    \r\n      const completed = newCompletedStatus[order.order_ID.S];\r\n      console.log(\"Completed: \", completed);\r\n    \r\n      const tracker = window.prompt(\"Enter Royal Mail Tracking Number: \");\r\n      console.log(tracker);\r\n    \r\n      // Make the API call to update the completed status and RMtracker\r\n      fetch(\"https://v57gq0zo66.execute-api.eu-west-1.amazonaws.com/default/updateOrderCompletedDalek\", {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ order_ID: order.order_ID.S, completed: completed, email: order.email.S, RMtracker: tracker }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          // Handle response data if needed\r\n          console.log(\"API Response after update:\", data);\r\n    \r\n          // Update the local state with the new completed status and tracking number\r\n          const updatedCompletedStatus = {\r\n            ...completedStatus,\r\n            [order.order_ID.S]: completed,\r\n          };\r\n          setCompletedStatus(updatedCompletedStatus);\r\n    \r\n          const updatedTrackingNumbers = {\r\n            ...orderTrackingNumbers,\r\n            [order.order_ID.S]: tracker,\r\n          };\r\n          console.log(\"Updated Tracking Numbers:\", updatedTrackingNumbers);\r\n          setOrderTrackingNumbers(updatedTrackingNumbers);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Fetch error:', error);\r\n        });\r\n    };\r\n\r\n      return(\r\n          <div className=\"CreateAdmin\">\r\n              <div className=\"content-main\">\r\n              <table>\r\n                <thead>\r\n                <tr>\r\n                    <th onClick={() => handleSort(\"date\")}>Date</th>\r\n                    <th>OrderID</th>\r\n                    <th onClick={() => handleSort(\"price\")}>Price</th>\r\n                    <th>Items (Name, Amount)</th>\r\n                    <th>User</th>\r\n                    <th>Email</th>\r\n                    <th>Completed</th>\r\n                    <th>RM Tracker</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {sortedItems.map((order, index) => (\r\n                  <tr key={index}>\r\n                    <td>{order.dateOrder.S}</td>\r\n                    <td>{order.order_ID.S}</td>\r\n                    <td>{order.price.N}</td>\r\n                    <td>{order.items.L.map((item) => {\r\n                        const name = item.M.name?.S || \"N/A\";\r\n                        const amount = item.M.amount?.N || \"N/A\";\r\n                        return `(${name}, ${amount})`;\r\n                      }).join(\", \") || \"\"\r\n                    }</td>\r\n                    <td>{order.userID.S}</td>\r\n                    <td>{order.email.S}</td>\r\n                    <td><input type=\"checkbox\" checked={completedStatus[order.order_ID.S]} onChange={() => handleCheckboxChange(order, order.completed.BOOL)}/></td>\r\n                    <td>{orderTrackingNumbers[order.order_ID.S]}</td>\r\n                    {console.log(\"Tracker\", orderTrackingNumbers[order.order_ID.S])}\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n            </div>\r\n          </div>\r\n      );\r\n  \r\n  }\r\n  \r\n  export default CreateOrder;","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\components\\admin\\viewCustomers.js",["143"],[],"import React, { useEffect, useState } from \"react\";\r\nimport \"./viewCustomers.css\";\r\n\r\nfunction ViewCustomers() {\r\n  const [users, setUsers] = useState([]);\r\n  const [orders, setOrders] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  var totalOrders = 0;\r\n  var activeOrders = 0;\r\n\r\n  useEffect(() => {\r\n    fetch('https://1blnclstr9.execute-api.eu-west-1.amazonaws.com/default/getOrdersDalek')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setOrders(JSON.parse(data.body));\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://d93b7k76j9.execute-api.eu-west-1.amazonaws.com/default/getAllUsersDalek\")\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(\"Request failed with status: \" + res.status);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        const parsedData = JSON.parse(data.body);\r\n        console.log(parsedData)\r\n        setUsers(parsedData);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error: \" + error);\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (users.length > 0) {\r\n      updateFormValues(currentIndex);\r\n    }\r\n  }, [users, currentIndex]);\r\n\r\n  function updateFormValues(index) {\r\n    if (users[index]) {\r\n      const currentUser = users[index];\r\n      console.log(\"Current User: \", currentUser);\r\n  \r\n      let customerTotalOrders = 0; // Initialize counters for the current customer\r\n      let customerActiveOrders = 0;\r\n  \r\n      for (let j = 0; j < orders.length; j++) {\r\n        const order = orders[j];\r\n        console.log(\"Order \", j, \": \", order);\r\n  \r\n        if (order.userID.S === currentUser.userID.S) {\r\n          customerTotalOrders += 1; // Increment total orders for the current customer\r\n  \r\n          if (!order.completed.BOOL) {\r\n            customerActiveOrders += 1; // Increment active orders for the current customer\r\n          }\r\n        }\r\n      }\r\n  \r\n      totalOrders = customerTotalOrders; // Assign customer counters to the global counters\r\n      activeOrders = customerActiveOrders;\r\n  \r\n      console.log(\"Active Orders: \", activeOrders, \", Total Orders: \", totalOrders);\r\n  \r\n      document.getElementById(\"id\").value = currentUser.userID.S;\r\n      document.getElementById(\"address\").value = currentUser.address.S;\r\n      document.getElementById(\"email\").value = currentUser.email.S;\r\n      document.getElementById(\"totOrders\").value = totalOrders;\r\n      document.getElementById(\"actOrders\").value = activeOrders;\r\n    }\r\n  }\r\n\r\n  function changeLeft() {\r\n    if (currentIndex === 0) {\r\n      alert(\"No More Records\");\r\n    } else {\r\n      setCurrentIndex((prevIndex) => prevIndex - 1);\r\n      updateFormValues(currentIndex - 1);\r\n    }\r\n  }\r\n\r\n  function changeRight() {\r\n    if (currentIndex === users.length - 1) {\r\n      alert(\"No More Records\");\r\n    } else {\r\n      setCurrentIndex((prevIndex) => prevIndex + 1);\r\n      updateFormValues(currentIndex + 1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"ViewCustomers\">\r\n      <div className=\"content-main\">\r\n        <div className=\"form\">\r\n          <form id=\"viewCustomers\">\r\n            <label>ID:</label>\r\n            <input type=\"text\" id=\"id\" className=\"text-input\" readOnly />\r\n            <label>Address:</label>\r\n            <input type=\"text\" id=\"address\" className=\"text-input\" />\r\n            <label>Email:</label>\r\n            <input type=\"text\" id=\"email\" className=\"text-input\" />\r\n            <label>Total Orders:</label>\r\n            <input type=\"text\" id=\"totOrders\" className=\"text-input\" />\r\n            <label>Active Orders:</label>\r\n            <input type=\"text\" id=\"actOrders\" className=\"text-input\" />\r\n          </form>\r\n        </div>\r\n        <div className=\"buttons\">\r\n          <button className=\"movementBtns\" onClick={changeLeft} disabled={isLoading}>\r\n            Backwards\r\n          </button>\r\n          <button className=\"movementBtns\" onClick={changeRight} disabled={isLoading}>\r\n            Forwards\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewCustomers;\r\n","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\pages\\Users\\Basket.js",["144","145","146","147"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport NavBar from \"../../components/NavBar\";\r\nimport Modal from \"../../components/Modal/confirmModal.js\"; // Import your Modal component\r\nimport \"./Basket.css\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction Basket() {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalMessage, setModalMessage] = useState('');\r\n  const [products, setProducts] = useState([]);\r\n  const [basket, setBasket] = useState(JSON.parse(sessionStorage.getItem(\"basket\")) || []);\r\n  const [loading, setLoading] = useState(true);\r\n  const [lowStock, setLowStock] = useState([]);\r\n  const newLowStock = [];\r\n\r\n  const notify = (message)=> {\r\n    toast.success(message, {\r\n      position: \"top-center\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"light\",\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Check if a successful order was placed and display a toast notification\r\n    if (localStorage.getItem(\"successfulOrderPlaced\")) {\r\n      notify(\"Order Placed Successfully\");\r\n      // Clear the flag from localStorage after displaying the toast\r\n      localStorage.removeItem(\"successfulOrderPlaced\");\r\n    }\r\n  \r\n    // Other useEffect code\r\n  }, []);\r\n\r\n const handleConfirm = () => {\r\n  // Update the basket item to match the database amount\r\n  const updatedBasket = [...basket];\r\n  const basketProduct = updatedBasket.find(item => item.sku === modalMessage.sku);\r\n  if (basketProduct) {\r\n    console.log(\"Basket Amount: \", basketProduct.amount, \"Inventory Count: \", modalMessage.inventory_count.N)\r\n    basketProduct.amount = modalMessage.inventory_count.N;\r\n    setBasket(updatedBasket);\r\n    sessionStorage.setItem(\"basket\", JSON.stringify(updatedBasket));\r\n  }\r\n\r\n  setShowModal(false); // Close the modal\r\n};\r\n\r\n  const handleCancel = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const openModalWithMessage = (message) => {\r\n    console.log(\"Opening Modal\")\r\n    setModalMessage(message);\r\n    setShowModal(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch('https://y6wf50h2e4.execute-api.eu-west-1.amazonaws.com/dev/getProductDalek')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setProducts(JSON.parse(data.body));\r\n        console.log(products)\r\n        setLoading(false);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  function CheckStockLevels() {\r\n    for (let j = 0; j < basket.length; j++) {\r\n      const basketProduct = basket[j];\r\n      const productInBasket = products.find(\r\n        (product) => product.sku.S === basketProduct.sku\r\n      );\r\n\r\n      if (productInBasket) {\r\n        console.log(\"Product in Basket\")\r\n        handleStockCheck(basketProduct, productInBasket);\r\n\r\n        const remainingProduct = productInBasket.inventory_count.N - basketProduct.amount;\r\n        console.log(remainingProduct);\r\n\r\n        if (remainingProduct <= 3) {\r\n          console.log(\r\n            \"Low Stock for: \",\r\n            productInBasket.name.S,\r\n            \" Amount Left: \",\r\n            remainingProduct\r\n          );\r\n\r\n          const itemAlreadyInLowStock = newLowStock.some(\r\n            (item) => item.name.S === productInBasket.name.S\r\n          );\r\n\r\n          productInBasket.lowEmailSent.BOOL = true;\r\n          productInBasket.inventory_count.N = remainingProduct;\r\n          console.log(\"product\", productInBasket);\r\n\r\n          if (!itemAlreadyInLowStock && productInBasket.lowEmailSent === true) {\r\n            newLowStock.push(productInBasket);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleStockCheck(basketProduct, productInBasket) {\r\n    console.log(\"Modal Check Function\")\r\n    console.log(\"Database Amount: \", productInBasket.inventory_count.N, \"Amount in Basket: \", basketProduct.amount)\r\n    if (basketProduct.amount > productInBasket.inventory_count.N) {\r\n      console.log(\"Amount Greater in basket\")\r\n      openModalWithMessage(\r\n        \"Not Enough Stock for: \" +\r\n        basketProduct.name +\r\n        \". Being changed to: \" +\r\n        productInBasket.inventory_count.N +\r\n        \". Do you wish to proceed?\", basketProduct, productInBasket\r\n      );\r\n    }\r\n  }\r\n\r\n  function checkMaxStock(index) {\r\n    for (let i = 0; i < products.length; i++) {\r\n      if (products[i].sku.S === basket[index].sku) {\r\n        if (products[i].inventory_count.N > basket[index].amount) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function add(index) {\r\n    if (checkMaxStock(index)) {\r\n      const updatedBasket = [...basket];\r\n      updatedBasket[index].amount += 1;\r\n      setBasket(updatedBasket);\r\n      sessionStorage.setItem(\"basket\", JSON.stringify(updatedBasket));\r\n    } else {\r\n      alert(\"Max Amount Reached\");\r\n    }\r\n  }\r\n  \r\n  function subtract(index) {\r\n    const updatedBasket = [...basket];\r\n    updatedBasket[index].amount -= 1;\r\n    if (updatedBasket[index].amount === 0) {\r\n      updatedBasket.splice(index, 1);\r\n    }\r\n    setBasket(updatedBasket);\r\n    sessionStorage.setItem(\"basket\", JSON.stringify(updatedBasket));\r\n  }\r\n\r\n  function formatDate() {\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    \r\n    return `${year}-${month}-${day}`;\r\n  }\r\n\r\n  function updateStockOnServer(product) {\r\n\r\n    var newStockAmount = 0;\r\n\r\n    for(let i = 0; i < products.length; i++){\r\n      console.log(\"In For Loop\")\r\n      if(products[i].sku.S === product.sku){\r\n        //newStockAmount = products[i].inventory_count.N - product.amount\r\n        newStockAmount = products[i].inventory_count.N\r\n        console.log(\"New Stock Number: \", newStockAmount, \"DB Inventory Count\", products[i].inventory_count.N, \"Amount Purchased: \", product.amount)\r\n      }\r\n    }\r\n\r\n    fetch(\"https://0e93bn4q21.execute-api.eu-west-1.amazonaws.com/default/updateProductDalek\", {\r\n    method: \"PUT\",\r\n    body: JSON.stringify({\r\n      sku: product.sku,\r\n      inventory_count: newStockAmount\r\n\r\n   }),\r\n    headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n})\r\n  .then(response => response.json())\r\n  .then(data => {\r\n    // Handle the response from the server if needed\r\n  })\r\n  .catch(error => {\r\n    console.error(\"Error updating product stock:\", error);\r\n  });\r\n  }\r\n  \r\n  function CheckOut() {\r\n    if (basket.length !== 0) {\r\n      const order_ID = \"S2M_\" + uuidv4();\r\n      let items = [];\r\n      let price = 0;\r\n  \r\n      CheckStockLevels();\r\n  \r\n      for (let i = 0; i < basket.length; i++) {\r\n        items.push({\r\n          sku: basket[i].sku,\r\n          name: basket[i].name,\r\n          amount: basket[i].amount,\r\n          price: basket[i].price,\r\n        });\r\n        price += basket[i].amount * basket[i].price;\r\n      }\r\n  \r\n      const userID = sessionStorage.getItem(\"name\");\r\n      price = parseFloat(price.toFixed(2));\r\n  \r\n      // Make the API call to post the order to the server\r\n      fetch(\"https://3nh8ubnqrh.execute-api.eu-west-1.amazonaws.com/default/postOrderDalek\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          order_ID,\r\n          userID,\r\n          price,\r\n          items,\r\n          dateOrder: formatDate(),\r\n          completed: false,\r\n          newLowStock: newLowStock,\r\n          email: sessionStorage.getItem(\"email\"),\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          if (res.ok) {\r\n            console.log(res);\r\n            return res.json();\r\n          }\r\n          throw new Error(\"Request failed!\");\r\n        })\r\n        .then((data) => {\r\n          localStorage.setItem(\"successfulOrderPlaced\", \"true\");\r\n          console.log(data);\r\n          sessionStorage.removeItem(\"basket\");\r\n          window.location.reload();\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"There was a problem with the fetch operation:\", error);\r\n        });\r\n  \r\n      // Update the stock on the server for each item in the basket\r\n      for (let i = 0; i < basket.length; i++) {\r\n        updateStockOnServer(basket[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <NavBar />\r\n      <div className=\"content-main-basket\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Price</th>\r\n            <th>Amount</th>\r\n            <th>Image</th>\r\n            <th>Description</th>\r\n            <th>Buttons</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {basket.map((product, index) => (\r\n            <tr key={index}>\r\n              <td>{product.name}</td>\r\n              <td>{product.price}</td>\r\n              <td>{product.amount}</td>\r\n              <td>\r\n                <img\r\n                  src={product.image_url}\r\n                  id=\"basket-img\"\r\n                  alt=\"Product 1\"\r\n                  width=\"50\"\r\n                  height=\"50\"\r\n                />\r\n              </td>\r\n              <td>{product.description}</td>\r\n              <td>\r\n                <button onClick={() => add(index)}>Add</button>\r\n                <button onClick={() => subtract(index)}>Subtract</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"button\">\r\n        <button id=\"basket-CheckOut\" onClick={CheckOut}>\r\n          Check Out\r\n        </button>\r\n      </div>\r\n        {console.log(\"showModal value:\", showModal)}\r\n        {showModal && (\r\n          <Modal\r\n            message={modalMessage}\r\n            onConfirm={handleConfirm}\r\n            onCancel={handleCancel}\r\n            style={{ display: showModal ? \"block\" : \"none\" }}\r\n          />\r\n        )}\r\n      </div>\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n          theme=\"light\"\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Basket;\r\n","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\components\\Modal\\confirmModal.js",[],[],"D:\\Github\\Sense2MeNew\\sense2me-client\\src\\components\\Users\\changeDetails.js",["148"],[],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport NavBar from \"../NavBar\";\r\n\r\nimport \"./changeDetails.css\"\r\n\r\nconst crypto = require('crypto');\r\n\r\nfunction ChangeDetails() {\r\n  const [isLoading, setIsLoading] = useState(true); // Add a loading state\r\n  const [user, setUser] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://d93b7k76j9.execute-api.eu-west-1.amazonaws.com/default/getAllUsersDalek\")\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(\"Request failed with status: \" + res.status);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        const parsedData = JSON.parse(data.body);\r\n        console.log(parsedData)\r\n        const foundUser = parsedData.find((user) => user.userID.S === sessionStorage.getItem(\"name\"));\r\n        console.log(\"Found User\", foundUser)\r\n        setUser(foundUser)\r\n        setIsLoading(false); // Set loading to false when data is loaded\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error: \" + error);\r\n        setIsLoading(false); // Set loading to false on error as well\r\n      });\r\n  }, []);\r\n\r\n  function updateFormValues() {\r\n      console.log(\"User\", user)\r\n      console.log(\"Updating Form\")\r\n      document.getElementById(\"username\").value = user.userID.S;\r\n      document.getElementById(\"email\").value = user.email.S;\r\n      document.getElementById(\"address\").value = user.address.S;\r\n  }\r\n\r\n  function handleForm(event) {\r\n    event.preventDefault();\r\n\r\n      const userID = document.getElementById(\"username\").value;\r\n      const email = document.getElementById(\"email\").value;\r\n      const address = document.getElementById(\"address\").value;\r\n      const password = document.getElementById(\"password\").value;\r\n\r\n      var body = {}\r\n\r\n      if(password === \"\"){\r\n        body = {\r\n          userID: userID,\r\n          email: email,\r\n          address: address,\r\n        }\r\n      }else{\r\n        const salt = crypto.randomBytes(16).toString('hex');\r\n        const passwordWithSalt = password + salt;\r\n        console.log(salt);\r\n        const hash = crypto.createHash('sha256').update(passwordWithSalt).digest('hex');\r\n        body = {\r\n          userID: userID,\r\n          email: email,\r\n          address: address,\r\n          password: hash,\r\n          salt: salt\r\n        }\r\n      }\r\n\r\n    fetch(\"https://n4feqgkz3g.execute-api.eu-west-1.amazonaws.com/default/updateDetailsDalek\", {\r\n      mode: \"cors\",\r\n      method: \"PUT\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(body)\r\n    })\r\n    .then(response => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      throw new Error('Failed to replace product');\r\n    })\r\n    .then(data => {\r\n      window.alert(\"Details Changed\");\r\n      document.getElementById(\"product-form\").reset();\r\n      window.location.reload();\r\n    })\r\n    .catch(error => {\r\n      console.error('Error replacing product:', error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"AddProduct\">\r\n        <NavBar />\r\n      <div className=\"content-main\" >\r\n        <div className=\"container\">\r\n          {isLoading ? ( // Check if data is loading\r\n            <p>Fetching products...</p> // Display loading message\r\n          ) : (\r\n             // Only render form when data is available\r\n            <form id=\"product-form\" onSubmit={handleForm}>\r\n            <label>Change Details</label>\r\n            <label>Username:</label>\r\n            <input type=\"text\" id=\"username\" placeholder=\"Username\" className=\"text-input\" readOnly value={user.userID.S} />\r\n            <label>Email:</label>\r\n            <input type=\"text\" id=\"email\" placeholder=\"Email\" className=\"text-input\" value={user.email.S} />\r\n            <label>Address:</label>\r\n            <input type=\"text\" id=\"address\" placeholder=\"Address\" className=\"text-input\" value={user.address.S} />\r\n            <label>Password:</label>\r\n            <input type=\"text\" id=\"password\" placeholder=\"Password\" className=\"text-input\" />\r\n            <button type=\"submit\">Update Details</button>\r\n          </form>\r\n            \r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChangeDetails;","D:\\Github\\Sense2MeNew\\sense2me-client\\src\\components\\admin\\DeleteProducts.js",["149"],[],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport \"./UpdateProduct.css\";\r\n\r\nfunction DeleteProduct() {\r\n  const [product, setProduct] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(true); // Add a loading state\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://y6wf50h2e4.execute-api.eu-west-1.amazonaws.com/dev/getProductDalek\")\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(\"Request failed with status: \" + res.status);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        const parsedData = JSON.parse(data.body);\r\n        setProduct(parsedData);\r\n        setIsLoading(false); // Set loading to false when data is loaded\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error: \" + error);\r\n        setIsLoading(false); // Set loading to false on error as well\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (product.length > 0) {\r\n      updateFormValues(currentIndex);\r\n    }\r\n  }, [product, currentIndex]);\r\n\r\n  function updateFormValues(index) {\r\n    if (product.length > 0) {\r\n      const currentItem = product[index];\r\n      console.log(currentItem.sku.S)\r\n      document.getElementById(\"sku\").value = currentItem.sku.S;\r\n      document.getElementById(\"name\").value = currentItem.name.S;\r\n      document.getElementById(\"price\").value = currentItem.price.N;\r\n      document.getElementById(\"description\").value = currentItem.description.S;\r\n      document.getElementById(\"image\").value = currentItem.image_url.S;\r\n      document.getElementById(\"inventory_count\").value = currentItem.inventory_count.N;\r\n    }\r\n  }\r\n\r\n  function changeLeft() {\r\n    if (currentIndex === 0) {\r\n      alert(\"No More Records\");\r\n    } else {\r\n      setCurrentIndex((prevIndex) => prevIndex - 1);\r\n    }\r\n  }\r\n\r\n  function changeRight() {\r\n    if (currentIndex === product.length - 1) {\r\n      alert(\"No More Records\");\r\n    } else {\r\n      setCurrentIndex((prevIndex) => prevIndex + 1);\r\n    }\r\n  }\r\n\r\n  function handleForm(event) {\r\n    event.preventDefault();\r\n\r\n    const sku = document.getElementById(\"sku\").value;\r\n    const name = document.getElementById(\"name\").value;\r\n    const price = document.getElementById(\"price\").value;\r\n    const description = document.getElementById(\"description\").value;\r\n    const image_url = document.getElementById(\"image\").value;\r\n    const inventory_count = document.getElementById(\"inventory_count\").value;\r\n    var newLowEmailSent = false\r\n    if(inventory_count <= 3){\r\n      newLowEmailSent = true\r\n    }\r\n\r\n    fetch(\"https://0e93bn4q21.execute-api.eu-west-1.amazonaws.com/default/updateProductDalek\", {\r\n      mode: \"cors\",\r\n      method: \"PUT\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        sku: sku,\r\n        name: name,\r\n        price: price,\r\n        description: description,\r\n        image_url: image_url,\r\n        inventory_count: inventory_count,\r\n        lowEmailSent: newLowEmailSent\r\n      })\r\n    })\r\n    .then(response => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      throw new Error('Failed to replace product');\r\n    })\r\n    .then(data => {\r\n      window.alert(\"Product Replaced\");\r\n      document.getElementById(\"product-form\").reset();\r\n      window.location.reload();\r\n    })\r\n    .catch(error => {\r\n      console.error('Error replacing product:', error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"AddProduct\">\r\n      <div className=\"content-main\">\r\n        <div className=\"container\">\r\n          {isLoading ? ( // Check if data is loading\r\n            <p>Fetching products...</p> // Display loading message\r\n          ) : (\r\n            product.length > 0 && ( // Only render form when data is available\r\n            <form id=\"product-form\" onSubmit={handleForm}>\r\n            <label>Update Product</label>\r\n            <label>SKU:</label>\r\n            <input type=\"text\" id=\"sku\" placeholder=\"product-name\" className=\"text-input\" readOnly/>\r\n            <label>Product Name:</label>\r\n            <input type=\"text\" id=\"name\" placeholder=\"product-name\" className=\"text-input\" />\r\n            <label>Product Price:</label>\r\n            <input type=\"float\" id=\"price\" placeholder=\"product-price\" className=\"text-input\" />\r\n            <label>Product Description:</label>\r\n            <input type=\"text\" id=\"description\" placeholder=\"product-description\" className=\"text-input\" />\r\n            <label>Product Image Link:</label>\r\n            <input type=\"text\" id=\"image\" placeholder=\"product-image\" className=\"text-input\" />\r\n            <label>Amount of Products:</label>\r\n            <input type=\"number\" id=\"inventory_count\" placeholder=\"product-amount\" className=\"text-input\" min=\"1\" />\r\n            <button type=\"submit\">Update Product</button>\r\n          </form>\r\n            )\r\n          )}\r\n          {isLoading || ( // Disable buttons while loading\r\n            <>\r\n              <button className=\"movementBtns\" onClick={changeLeft} disabled={isLoading}>\r\n                Backwards\r\n              </button>\r\n              <button className=\"movementBtns\" onClick={changeRight} disabled={isLoading}>\r\n                Forwards\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeleteProduct;",{"ruleId":"150","severity":1,"message":"151","line":2,"column":39,"nodeType":"152","messageId":"153","endLine":2,"endColumn":45},{"ruleId":"154","severity":1,"message":"155","line":57,"column":6,"nodeType":"156","endLine":57,"endColumn":8,"suggestions":"157"},{"ruleId":"154","severity":1,"message":"155","line":64,"column":6,"nodeType":"156","endLine":64,"endColumn":14,"suggestions":"158"},{"ruleId":"150","severity":1,"message":"159","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":19},{"ruleId":"150","severity":1,"message":"160","line":2,"column":9,"nodeType":"152","messageId":"153","endLine":2,"endColumn":13},{"ruleId":"150","severity":1,"message":"161","line":5,"column":8,"nodeType":"152","messageId":"153","endLine":5,"endColumn":12},{"ruleId":"162","severity":1,"message":"163","line":35,"column":9,"nodeType":"164","messageId":"165","endLine":50,"endColumn":10},{"ruleId":"154","severity":1,"message":"166","line":15,"column":6,"nodeType":"156","endLine":15,"endColumn":8,"suggestions":"167"},{"ruleId":"150","severity":1,"message":"168","line":7,"column":10,"nodeType":"152","messageId":"153","endLine":7,"endColumn":20},{"ruleId":"154","severity":1,"message":"166","line":53,"column":6,"nodeType":"156","endLine":53,"endColumn":8,"suggestions":"169"},{"ruleId":"154","severity":1,"message":"170","line":34,"column":6,"nodeType":"156","endLine":34,"endColumn":29,"suggestions":"171"},{"ruleId":"154","severity":1,"message":"172","line":47,"column":6,"nodeType":"156","endLine":47,"endColumn":8,"suggestions":"173"},{"ruleId":"154","severity":1,"message":"170","line":47,"column":6,"nodeType":"156","endLine":47,"endColumn":27,"suggestions":"174"},{"ruleId":"150","severity":1,"message":"175","line":14,"column":10,"nodeType":"152","messageId":"153","endLine":14,"endColumn":17},{"ruleId":"150","severity":1,"message":"176","line":15,"column":10,"nodeType":"152","messageId":"153","endLine":15,"endColumn":18},{"ruleId":"150","severity":1,"message":"177","line":15,"column":20,"nodeType":"152","messageId":"153","endLine":15,"endColumn":31},{"ruleId":"154","severity":1,"message":"178","line":78,"column":6,"nodeType":"156","endLine":78,"endColumn":8,"suggestions":"179"},{"ruleId":"150","severity":1,"message":"180","line":35,"column":12,"nodeType":"152","messageId":"153","endLine":35,"endColumn":28},{"ruleId":"154","severity":1,"message":"170","line":33,"column":6,"nodeType":"156","endLine":33,"endColumn":29,"suggestions":"181"},"no-unused-vars","'Outlet' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'CheckStockLevels'. Either include it or remove the dependency array.","ArrayExpression",["182"],["183"],"'useParams' is defined but never used.","'Link' is defined but never used.","'Shop' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'handleForm'. Either include it or remove the dependency array.",["184"],"'basketSize' is assigned a value but never used.",["185"],"React Hook useEffect has a missing dependency: 'updateFormValues'. Either include it or remove the dependency array.",["186"],"React Hook useEffect has a missing dependency: 'orderTrackingNumbers'. Either include it or remove the dependency array.",["187"],["188"],"'loading' is assigned a value but never used.","'lowStock' is assigned a value but never used.","'setLowStock' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'products'. Either include it or remove the dependency array.",["189"],"'updateFormValues' is defined but never used.",["190"],{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"195","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"198","fix":"206"},"Update the dependencies array to be: [CheckStockLevels]",{"range":"207","text":"208"},"Update the dependencies array to be: [CheckStockLevels, items]",{"range":"209","text":"210"},"Update the dependencies array to be: [handleForm]",{"range":"211","text":"212"},{"range":"213","text":"212"},"Update the dependencies array to be: [product, currentIndex, updateFormValues]",{"range":"214","text":"215"},"Update the dependencies array to be: [orderTrackingNumbers]",{"range":"216","text":"217"},"Update the dependencies array to be: [users, currentIndex, updateFormValues]",{"range":"218","text":"219"},"Update the dependencies array to be: [products]",{"range":"220","text":"221"},{"range":"222","text":"215"},[1882,1884],"[CheckStockLevels]",[2041,2049],"[CheckStockLevels, items]",[374,376],"[handleForm]",[1450,1452],[1071,1094],"[product, currentIndex, updateFormValues]",[1653,1655],"[orderTrackingNumbers]",[1363,1384],"[users, currentIndex, updateFormValues]",[2605,2607],"[products]",[1038,1061]]